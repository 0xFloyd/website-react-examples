{"version":3,"sources":["assets/userImages/photo-1438761681033-6461ffad8d80.jpeg","assets/userImages/photo-1463453091185-61582044d556.jpeg","assets/userImages/photo-1503467913725-8484b65b0715.jpeg","assets/userImages/photo-1519345182560-3f2917c472ef.jpeg","assets/userImages/photo-1506089676908-3592f7389d4d.jpeg","assets/userImages/photo-1507003211169-0a1dd7228f2d.jpeg","assets/userImages/photo-1517202383675-eb0a6e27775f.jpeg","assets/userImages/photo-1531251445707-1f000e1e87d0.jpeg","assets/userImages/photo-1541271696563-3be2f555fc4e.jpeg","assets/userImages/photo-1542345812-d98b5cd6cf98.jpeg","assets/userImages/photo-1546539782-6fc531453083.jpeg","assets/userImages/photo-1546623381-d6d69cd69955.jpeg","assets/userImages/photo-1546820389-44d77e1f3b31.jpeg","assets/userImages/photo-1548946526-f69e2424cf45.jpeg","assets/userImages/photo-1549351236-caca0f174515.jpeg","assets/userImages/photo-1551069613-1904dbdcda11.jpeg","assets/userImages/photo-1554384645-13eab165c24b.jpeg","assets/userImages/photo-1569443693539-175ea9f007e8.jpeg","assets/userImages/photo-1573140247632-f8fd74997d5c.jpeg","assets/userImages/photo-1546456073-6712f79251bb.jpeg","assets/userImages/photo-1502378735452-bc7d86632805.jpeg","assets/userImages/photo-1546967191-fdfb13ed6b1e.jpeg","assets/userImages/photo-1502937406922-305bb2789e95.jpeg","assets/userImages/photo-1552058544-f2b08422138a.jpeg","assets/stream.png","ChecklistTasks.js","assets/ChannelInfoIcon.js","assets/ChannelSaveIcon.js","assets/CloseThreadIcon.js","assets/CreateChannelIcon.js","assets/EmojiIcon.js","assets/HamburgerIcon.js","assets/LightningBoltSmall.js","assets/SendIcon.js","assets/XButton.js","assets/XButtonBackground.js","assets/index.js","components/CreateChannel/CreateChannel.js","components/CustomMessage/CustomMessage.js","components/TypingIndicator/TypingIndicator.js","components/MessagingChannelHeader/MessagingChannelHeader.js","components/MessagingChannelList/SkeletonLoader.js","components/MessagingChannelList/MessagingChannelList.js","components/MessagingChannelPreview/MessagingChannelPreview.js","components/MessagingInput/MessagingInput.js","components/MessagingThread/MessagingThread.js","components/ChannelInner/ChannelInner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useChecklist","chatClient","targetOrigin","useEffect","parent","notify","message","window","postMessage","handleNewEvent","type","command","attachments","length","og_scrape_url","parent_id","on","off","ChannelInfoIcon","isEditing","setIsEditing","width","height","viewBox","fill","xmlns","style","cursor","marginLeft","onClick","d","fillRule","clipRule","ChannelSaveIcon","CloseThreadIcon","closeThread","e","marginRight","CreateChannelIcon","EmojiIcon","HamburgerIcon","margin","LightningBoltSmall","SendIcon","XButton","XButtonBackground","randomImages","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","avatar11","avatar12","avatar13","avatar14","avatar15","avatar16","avatar17","avatar18","avatar19","avatar20","avatar21","avatar22","avatar23","avatar24","getRandomImage","index","Math","floor","random","getCleanImage","member","cleanImage","user","image","indexOf","name","UserResult","className","Avatar","size","online","React","memo","onClose","toggleMobile","useChatContext","client","setActiveChannel","useState","undefined","focusedUser","setFocusedUser","inputText","setInputText","resultsOpen","setResultsOpen","searchEmpty","setSearchEmpty","searching","setSearching","selectedUsers","setSelectedUsers","users","setUsers","inputRef","useRef","clearState","clickListener","document","addEventListener","removeEventListener","findUsers","a","queryUsers","id","$ne","userID","$and","$autocomplete","$nin","limit","response","console","log","error","findUsersDebounce","_debounce","trailing","createChannel","selectedUsersIds","map","u","channel","members","conversation","watch","addUser","find","current","focus","handleKeyDown","useCallback","which","prevFocused","preventDefault","newUsers","filter","item","removeUser","key","onSubmit","autoFocus","ref","value","onChange","target","placeholder","i","CustomMessage","props","MessageSimple","TypingIndicator","typing","useTypingContext","Object","values","text","useChannelStateContext","data","channelName","setChannelName","title","setTitle","state","updateChannel","update","join","EditHeader","flex","blur","onBlur","theme","shape","getAvatarGroup","SkeletonLoader","position","children","loading","onCreateChannel","streamLogo","getDemoChannel","addMembers","ListHeaderWrapper","MessagingChannelPreview","latestMessage","setIsCreating","useContext","ChatContext","activeChannel","getChannelName","lastHours","last_message_at","getHours","lastMinutes","getMinutes","half","toString","getTimeStamp","GiphyIcon","GiphyContext","giphyState","setGiphyState","acceptedFiles","maxNumberOfFiles","multipleUploads","messageInput","useMessageInputContext","event","deletePressed","nativeEvent","inputType","startsWith","numberOfUploads","replace","handleChange","role","aria-roledescription","openEmojiPicker","emojiPickerRef","accept","handleFiles","uploadNewFiles","multiple","disabled","UploadsPreview","ChatAutoComplete","rows","handleSubmit","EmojiPicker","MessagingThreadHeader","thread","reply_count","ChannelInner","sendMessage","useChannelActionContext","Window","MessageList","messageActions","MessageInput","overrideSubmitHandler","updatedMessage","updatedText","newMessage","parentMessage","messageToSend","created_at","pinned_at","updated_at","sendMessagePromise","logChatPromiseExecution","Thread","Input","MessagingInput","urlParams","URLSearchParams","location","search","apiKey","get","process","userToken","REACT_APP_TARGET_ORIGIN","noChannelNameFilter","skipNameImageSet","filters","$in","options","presence","sort","cid","userToConnect","createContext","App","setChatClient","isCreating","isMobileNavVisible","setMobileNav","setTheme","StreamChat","getInstance","connectUser","initChat","disconnectUser","handleThemeChange","origin","mobileChannelList","querySelector","classList","add","body","overflow","remove","setAppHeight","documentElement","setProperty","innerHeight","giphyContextValue","Chat","ChannelList","List","Preview","Channel","Message","ThreadHeader","Provider","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bdb29af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo-1438761681033-6461ffad8d80.eee37ee5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1463453091185-61582044d556.a10d0ecf.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1503467913725-8484b65b0715.44bc3e89.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1519345182560-3f2917c472ef.a36389b6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1506089676908-3592f7389d4d.de96ec3a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1507003211169-0a1dd7228f2d.9bdeb468.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1517202383675-eb0a6e27775f.1864b915.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1531251445707-1f000e1e87d0.07978947.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1541271696563-3be2f555fc4e.4e84f363.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1542345812-d98b5cd6cf98.149796d5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1546539782-6fc531453083.fe0d4222.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1546623381-d6d69cd69955.df1d202f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1546820389-44d77e1f3b31.ddd84bce.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1548946526-f69e2424cf45.cdd62d22.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1549351236-caca0f174515.fd0c1000.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1551069613-1904dbdcda11.89f40904.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1554384645-13eab165c24b.b980e4f7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1569443693539-175ea9f007e8.78073ccc.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1573140247632-f8fd74997d5c.77d2e7a6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1546456073-6712f79251bb.24309ff6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1502378735452-bc7d86632805.94a54b7b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1546967191-fdfb13ed6b1e.1d750cf2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1502937406922-305bb2789e95.edbd0437.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1552058544-f2b08422138a.fe0cd750.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/stream.ce7bf370.png\";","import { useEffect } from 'react';\n\nconst notifyParent = (parent) => (message) => {\n  window.parent.postMessage(message, parent);\n};\n\nconst YOUTUBE_LINK = 'https://youtu.be/Ujvy-DEA-UM';\n\n// We have to keep this task list up-to-date with the website's checklist\nconst [REACT_TO_MESSAGE, RUN_GIPHY, SEND_YOUTUBE, DRAG_DROP, START_THREAD, SEND_MESSAGE] = [\n  'react-to-message',\n  'run-giphy',\n  'send-youtube',\n  'drag-drop-image',\n  'start-thread',\n  'send-message',\n];\n\nexport const useChecklist = (chatClient, targetOrigin) => {\n  useEffect(() => {\n    const notify = notifyParent(targetOrigin);\n    const handleNewEvent = ({ type, message }) => {\n      switch (type) {\n        case 'reaction.new':\n          notify(REACT_TO_MESSAGE);\n          break;\n        case 'message.new':\n          if (message.command === 'giphy') {\n            notify(RUN_GIPHY);\n            break;\n          }\n          if (message.attachments.length) {\n            if (\n              message.attachments[0].type === 'video' &&\n              message.attachments[0].og_scrape_url === YOUTUBE_LINK\n            ) {\n              notify(SEND_YOUTUBE);\n              break;\n            }\n            if (message.attachments[0].type === 'image') {\n              notify(DRAG_DROP);\n              break;\n            }\n          }\n          if (message.parent_id) {\n            notify(START_THREAD);\n            break;\n          }\n          notify(SEND_MESSAGE);\n          break;\n        default:\n          break;\n      }\n    };\n    if (chatClient) {\n      chatClient.on(handleNewEvent);\n    }\n    return () => chatClient?.off(handleNewEvent);\n  }, [chatClient, targetOrigin]);\n};\n","import React from 'react';\n\nexport const ChannelInfoIcon = ({ isEditing, setIsEditing }) => (\n  <svg\n    width='24'\n    height='24'\n    viewBox='0 0 24 24'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    style={{ cursor: 'pointer', marginLeft: '16px' }}\n    onClick={() => {\n      if (!isEditing) {\n        setIsEditing(true);\n      }\n    }}\n  >\n    <path\n      d='M12 2C17.52 2 22 6.48 22 12C22 17.52 17.52 22 12 22C6.48 22 2 17.52 2 12C2 6.48 6.48 2 12 2Z'\n      fill='#858688'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M13 8L13 6H11V8H13ZM13 10H11V18H13V10Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const ChannelSaveIcon = () => (\n  <svg\n    width='24'\n    height='24'\n    viewBox='0 0 24 24'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    style={{ cursor: 'pointer', marginLeft: '16px' }}\n  >\n    <path\n      d='M12 2C17.52 2 22 6.48 22 12C22 17.52 17.52 22 12 22C6.48 22 2 17.52 2 12C2 6.48 6.48 2 12 2Z'\n      fill='#858688'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M16.3875 7.73454C15.9092 7.4584 15.2977 7.62228 15.0215 8.10057L11.3573 14.4472L8.62166 11.7116C8.23113 11.3211 7.59797 11.3211 7.20744 11.7116C6.81692 12.1022 6.81692 12.7353 7.20744 13.1259L10.8123 16.7307C10.8303 16.7487 10.8488 16.7658 10.8677 16.7821C10.9278 16.8418 10.9965 16.8948 11.0732 16.9392C11.5515 17.2153 12.1631 17.0514 12.4393 16.5731L16.7536 9.10057C17.0297 8.62228 16.8658 8.01069 16.3875 7.73454Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CloseThreadIcon = ({ closeThread }) => (\n  <svg\n    width='40'\n    height='40'\n    viewBox='0 0 40 40'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    onClick={(e) => closeThread(e)}\n    style={{ cursor: 'pointer', marginRight: '10px' }}\n  >\n    <path\n      d='M0 20C0 8.95431 8.95431 0 20 0C31.0457 0 40 8.95431 40 20C40 31.0457 31.0457 40 20 40C8.95431 40 0 31.0457 0 20Z'\n      fill='#3E3E41'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M27.5625 25.4416L22.1208 20L27.5625 14.5583C28.15 13.9708 28.15 13.025 27.5625 12.4375C26.975 11.85 26.0291 11.85 25.4416 12.4375L20 17.8791L14.5583 12.4375C13.9708 11.85 13.025 11.85 12.4375 12.4375C11.85 13.025 11.85 13.9708 12.4375 14.5583L17.8791 20L12.4375 25.4416C11.85 26.0291 11.85 26.975 12.4375 27.5625C13.025 28.15 13.9708 28.15 14.5583 27.5625L20 22.1208L25.4416 27.5625C26.0291 28.15 26.975 28.15 27.5625 27.5625C28.1458 26.975 28.1458 26.025 27.5625 25.4416Z'\n      fill='#E9E9EA'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CreateChannelIcon = () => (\n  <svg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M18 17.9708H0V13.7278L13.435 0.292787C13.8255 -0.0975955 14.4585 -0.0975955 14.849 0.292787L17.678 3.12179C18.0684 3.51229 18.0684 4.14529 17.678 4.53579L6.243 15.9708H18V17.9708ZM2 15.9708H3.414L12.728 6.65679L11.314 5.24279L2 14.5568V15.9708ZM15.556 3.82879L14.142 5.24279L12.728 3.82879L14.142 2.41479L15.556 3.82879Z'\n      fill='#E9E9EA'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const EmojiIcon = () => (\n  <svg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <g>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2ZM0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10Z'\n      />\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M9 7.5C9 8.32843 8.32843 9 7.5 9C6.67157 9 6 8.32843 6 7.5C6 6.67157 6.67157 6 7.5 6C8.32843 6 9 6.67157 9 7.5Z'\n      />\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M14 7.5C14 8.32843 13.3284 9 12.5 9C11.6716 9 11 8.32843 11 7.5C11 6.67157 11.6716 6 12.5 6C13.3284 6 14 6.67157 14 7.5Z'\n      />\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M5.42662 11.1808C5.87907 10.8641 6.5026 10.9741 6.81932 11.4266C7.30834 12.1252 8.21252 12.9219 9.29096 13.1459C10.275 13.3503 11.6411 13.1262 13.2568 11.3311C13.6263 10.9206 14.2585 10.8873 14.6691 11.2567C15.0796 11.6262 15.1128 12.2585 14.7434 12.669C12.759 14.8738 10.7085 15.4831 8.88421 15.1041C7.15432 14.7448 5.8585 13.5415 5.18085 12.5735C4.86414 12.121 4.97417 11.4975 5.42662 11.1808Z'\n      />\n    </g>\n  </svg>\n);\n","import React from 'react';\n\nexport const HamburgerIcon = () => (\n  <svg\n    width='16'\n    height='14'\n    viewBox='0 0 16 14'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    style={{ cursor: 'pointer', margin: '10px' }}\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M0.5 0.333344H15.5V2.00001H0.5V0.333344ZM0.5 6.16667H15.5V7.83334H0.5V6.16667ZM15.5 12H0.5V13.6667H15.5V12Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const LightningBoltSmall = () => (\n  <svg width='6' height='12' viewBox='0 0 6 12' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M2.75749 0.666626H5.66659L3.72719 4.54541H5.66659L2.03022 11.3333L2.75749 6.48481H0.333252L2.75749 0.666626Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SendIcon = () => (\n  <svg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M20 10C20 4.48 15.52 0 10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10ZM6 9H10V6L14 10L10 14V11H6V9Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const XButton = () => (\n  <svg width='10' height='10' viewBox='0 0 10 10' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M9.72472 8.39971L6.325 5L9.72472 1.60029C10.0918 1.23324 10.0918 0.642327 9.72472 0.275283C9.35767 -0.091761 8.76676 -0.091761 8.39971 0.275283L5 3.675L1.60029 0.275283C1.23324 -0.091761 0.642327 -0.091761 0.275283 0.275283C-0.091761 0.642327 -0.091761 1.23324 0.275283 1.60029L3.675 5L0.275283 8.39971C-0.091761 8.76676 -0.091761 9.35767 0.275283 9.72472C0.642327 10.0918 1.23324 10.0918 1.60029 9.72472L5 6.325L8.39971 9.72472C8.76676 10.0918 9.35767 10.0918 9.72472 9.72472C10.0892 9.35767 10.0892 8.76415 9.72472 8.39971Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const XButtonBackground = () => (\n  <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12 2C17.52 2 22 6.48 22 12C22 17.52 17.52 22 12 22C6.48 22 2 17.52 2 12C2 6.48 6.48 2 12 2Z'\n      fill='#858688'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M16.7247 15.3997L13.325 12L16.7247 8.60029C17.0918 8.23324 17.0918 7.64233 16.7247 7.27528C16.3577 6.90824 15.7668 6.90824 15.3997 7.27528L12 10.675L8.60029 7.27528C8.23324 6.90824 7.64233 6.90824 7.27528 7.27528C6.90824 7.64233 6.90824 8.23324 7.27528 8.60029L10.675 12L7.27528 15.3997C6.90824 15.7668 6.90824 16.3577 7.27528 16.7247C7.64233 17.0918 8.23324 17.0918 8.60029 16.7247L12 13.325L15.3997 16.7247C15.7668 17.0918 16.3577 17.0918 16.7247 16.7247C17.0892 16.3577 17.0892 15.7642 16.7247 15.3997Z'\n      fill='white'\n    />\n  </svg>\n);\n","import avatar1 from './userImages/photo-1438761681033-6461ffad8d80.jpeg';\nimport avatar2 from './userImages/photo-1463453091185-61582044d556.jpeg';\nimport avatar3 from './userImages/photo-1503467913725-8484b65b0715.jpeg';\nimport avatar4 from './userImages/photo-1519345182560-3f2917c472ef.jpeg';\nimport avatar5 from './userImages/photo-1506089676908-3592f7389d4d.jpeg';\nimport avatar6 from './userImages/photo-1507003211169-0a1dd7228f2d.jpeg';\nimport avatar7 from './userImages/photo-1517202383675-eb0a6e27775f.jpeg';\nimport avatar8 from './userImages/photo-1531251445707-1f000e1e87d0.jpeg';\nimport avatar9 from './userImages/photo-1541271696563-3be2f555fc4e.jpeg';\nimport avatar10 from './userImages/photo-1542345812-d98b5cd6cf98.jpeg';\nimport avatar11 from './userImages/photo-1546539782-6fc531453083.jpeg';\nimport avatar12 from './userImages/photo-1546623381-d6d69cd69955.jpeg';\nimport avatar13 from './userImages/photo-1546820389-44d77e1f3b31.jpeg';\nimport avatar14 from './userImages/photo-1548946526-f69e2424cf45.jpeg';\nimport avatar15 from './userImages/photo-1549351236-caca0f174515.jpeg';\nimport avatar16 from './userImages/photo-1551069613-1904dbdcda11.jpeg';\nimport avatar17 from './userImages/photo-1554384645-13eab165c24b.jpeg';\nimport avatar18 from './userImages/photo-1569443693539-175ea9f007e8.jpeg';\nimport avatar19 from './userImages/photo-1573140247632-f8fd74997d5c.jpeg';\nimport avatar20 from './userImages/photo-1546456073-6712f79251bb.jpeg';\nimport avatar21 from './userImages/photo-1502378735452-bc7d86632805.jpeg';\nimport avatar22 from './userImages/photo-1546967191-fdfb13ed6b1e.jpeg';\nimport avatar23 from './userImages/photo-1502937406922-305bb2789e95.jpeg';\nimport avatar24 from './userImages/photo-1552058544-f2b08422138a.jpeg';\n\nexport { ChannelInfoIcon } from './ChannelInfoIcon';\nexport { ChannelSaveIcon } from './ChannelSaveIcon';\nexport { CloseThreadIcon } from './CloseThreadIcon';\nexport { CommandIcon } from './CommandIcon';\nexport { CreateChannelIcon } from './CreateChannelIcon';\nexport { EmojiIcon } from './EmojiIcon';\nexport { HamburgerIcon } from './HamburgerIcon';\nexport { LightningBoltSmall } from './LightningBoltSmall';\nexport { SendIcon } from './SendIcon';\nexport { XButton } from './XButton';\nexport { XButtonBackground } from './XButtonBackground';\n\nconst randomImages = [\n  avatar1,\n  avatar2,\n  avatar3,\n  avatar4,\n  avatar5,\n  avatar6,\n  avatar7,\n  avatar8,\n  avatar9,\n  avatar10,\n  avatar11,\n  avatar12,\n  avatar13,\n  avatar14,\n  avatar15,\n  avatar16,\n  avatar17,\n  avatar18,\n  avatar19,\n  avatar20,\n  avatar21,\n  avatar22,\n  avatar23,\n  avatar24,\n];\n\nexport const getRandomImage = () => {\n  const index = Math.floor(Math.random() * 24);\n  return randomImages[index];\n};\n\nexport const getCleanImage = (member) => {\n  let cleanImage = member.user?.image || '';\n\n  const cleanIndex = randomImages.indexOf(cleanImage);\n\n  if (cleanIndex === -1) {\n    cleanImage = getRandomImage();\n  }\n\n  if (member.user?.name === 'Jen Alexander') {\n    cleanImage = randomImages[11];\n  }\n\n  if (member.user?.name === 'Kevin Rosen') {\n    cleanImage = randomImages[23];\n  }\n\n  return cleanImage;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport _debounce from 'lodash.debounce';\n\nimport { XButton, XButtonBackground } from '../../assets';\n\nimport './CreateChannel.css';\n\nconst UserResult = ({ user }) => (\n  <li className='messaging-create-channel__user-result'>\n    <Avatar image={user.image} size={40} />\n    {user.online && <div className='messaging-create-channel__user-result-online' />}\n    <div className='messaging-create-channel__user-result__details'>\n      <span>{user.name}</span>\n      {/* <span className='messaging-create-channel__user-result__details__last-seen'>{user.online}</span> */}\n    </div>\n  </li>\n);\n\nconst CreateChannel = ({ onClose, toggleMobile }) => {\n  const { client, setActiveChannel } = useChatContext();\n\n  const [focusedUser, setFocusedUser] = useState(undefined);\n  const [inputText, setInputText] = useState('');\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [searchEmpty, setSearchEmpty] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const inputRef = useRef();\n\n  const clearState = () => {\n    setInputText('');\n    setResultsOpen(false);\n    setSearchEmpty(false);\n  };\n\n  useEffect(() => {\n    const clickListener = () => {\n      if (resultsOpen) clearState();\n    };\n\n    document.addEventListener('click', clickListener);\n\n    return () => document.removeEventListener('click', clickListener);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const findUsers = async () => {\n    if (searching) return;\n    setSearching(true);\n\n    try {\n      const response = await client.queryUsers(\n        {\n          id: { $ne: client.userID },\n          $and: [\n            { name: { $autocomplete: inputText } },\n            { name: { $nin: ['Daniel Smith', 'Kevin Rosen', 'Jen Alexander'] } },\n          ],\n        },\n        { id: 1 },\n        { limit: 6 },\n      );\n\n      if (!response.users.length) {\n        setSearchEmpty(true);\n      } else {\n        setSearchEmpty(false);\n        setUsers(response.users);\n      }\n\n      setResultsOpen(true);\n    } catch (error) {\n      console.log({ error });\n    }\n\n    setSearching(false);\n  };\n\n  const findUsersDebounce = _debounce(findUsers, 100, {\n    trailing: true,\n  });\n\n  useEffect(() => {\n    if (inputText) {\n      findUsersDebounce();\n    }\n  }, [inputText]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const createChannel = async () => {\n    const selectedUsersIds = selectedUsers.map((u) => u.id);\n\n    if (!selectedUsersIds.length) return;\n\n    const conversation = await client.channel('messaging', {\n      members: [...selectedUsersIds, client.userID],\n    });\n\n    await conversation.watch();\n\n    setActiveChannel(conversation);\n    setSelectedUsers([]);\n    setUsers([]);\n    onClose();\n  };\n\n  const addUser = (u) => {\n    const isAlreadyAdded = selectedUsers.find((user) => user.id === u.id);\n    if (isAlreadyAdded) return;\n\n    setSelectedUsers([...selectedUsers, u]);\n    setResultsOpen(false);\n    setInputText('');\n    inputRef.current.focus();\n  };\n\n  const removeUser = (user) => {\n    const newUsers = selectedUsers.filter((item) => item.id !== user.id);\n    setSelectedUsers(newUsers);\n    inputRef.current.focus();\n  };\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      // check for up(38) or down(40) key\n      if (e.which === 38) {\n        setFocusedUser((prevFocused) => {\n          if (prevFocused === undefined) return 0;\n          return prevFocused === 0 ? users.length - 1 : prevFocused - 1;\n        });\n      }\n      if (e.which === 40) {\n        setFocusedUser((prevFocused) => {\n          if (prevFocused === undefined) return 0;\n          return prevFocused === users.length - 1 ? 0 : prevFocused + 1;\n        });\n      }\n      if (e.which === 13) {\n        e.preventDefault();\n        if (focusedUser !== undefined) {\n          addUser(users[focusedUser]);\n          return setFocusedUser(undefined);\n        }\n      }\n    },\n    [users, focusedUser], // eslint-disable-line\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className='messaging-create-channel'>\n      <header>\n        <div className='messaging-create-channel__left'>\n          <div className='messaging-create-channel__left-text'>To: </div>\n          <div className='users-input-container'>\n            {!!selectedUsers?.length && (\n              <div className='messaging-create-channel__users'>\n                {selectedUsers.map((user) => (\n                  <div\n                    className='messaging-create-channel__user'\n                    onClick={() => removeUser(user)}\n                    key={user.id}\n                  >\n                    <div className='messaging-create-channel__user-text'>{user.name}</div>\n                    <XButton />\n                  </div>\n                ))}\n              </div>\n            )}\n            <form onSubmit={addUser}>\n              <input\n                autoFocus\n                ref={inputRef}\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n                placeholder={!selectedUsers.length ? 'Start typing for suggestions' : ''}\n                type='text'\n                className='messaging-create-channel__input'\n              />\n            </form>\n          </div>\n          <div className='close-mobile-create' onClick={() => toggleMobile()}>\n            <XButtonBackground />\n          </div>\n        </div>\n        <button className='create-channel-button' onClick={createChannel}>\n          Start chat\n        </button>\n      </header>\n      {inputText && (\n        <main>\n          <ul className='messaging-create-channel__user-results'>\n            {!!users?.length && !searchEmpty && (\n              <div>\n                {users.map((user, i) => (\n                  <div\n                    className={`messaging-create-channel__user-result ${\n                      focusedUser === i && 'focused'\n                    }`}\n                    onClick={() => addUser(user)}\n                    key={user.id}\n                  >\n                    <UserResult user={user} />\n                  </div>\n                ))}\n              </div>\n            )}\n            {searchEmpty && (\n              <div\n                onClick={() => {\n                  inputRef.current.focus();\n                  clearState();\n                }}\n                className='messaging-create-channel__user-result empty'\n              >\n                No people found...\n              </div>\n            )}\n          </ul>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(CreateChannel);\n","import React from 'react';\nimport { MessageSimple } from 'stream-chat-react';\n\nimport './CustomMessage.css';\n\nconst CustomMessage = (props) => {\n  return (\n    <>\n      <MessageSimple {...props} />\n    </>\n  );\n};\n\nexport default CustomMessage;\n","import React from 'react';\nimport { useChatContext, useTypingContext } from 'stream-chat-react';\n\nimport './TypingIndicator.css';\n\nexport const TypingIndicator = () => {\n  const { client } = useChatContext();\n  const { typing } = useTypingContext();\n\n  if (!client || !typing) return null;\n\n  const users = Object.values(typing)\n    .filter(({ user }) => user?.id !== client.user?.id)\n    .map(({ user }) => user.name || user.id);\n\n  let text = '';\n\n  if (users.length === 1) {\n    text = `${users[0]} is typing`;\n  } else if (users.length === 2) {\n    text = `${users[0]} and ${users[1]} are typing`;\n  } else if (users.length > 2) {\n    text = `${users[0]} and ${users.length - 1} more are typing`;\n  }\n\n  return (\n    <div className='messaging__typing-indicator'>\n      {text && (\n        <div className='dots'>\n          <span className='dot' />\n          <span className='dot' />\n          <span className='dot' />\n        </div>\n      )}\n      <div>{text}</div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\n\nimport './MessagingChannelHeader.css';\n\nimport { TypingIndicator } from '../TypingIndicator/TypingIndicator';\n\nimport { ChannelInfoIcon, ChannelSaveIcon, getCleanImage, HamburgerIcon } from '../../assets';\n\nconst getAvatarGroup = (members) => {\n  if (members.length === 1) {\n    return (\n      <div className='messaging__channel-header__avatars'>\n        <Avatar image={getCleanImage(members[0])} size={40} />;\n      </div>\n    );\n  }\n\n  if (members.length === 2) {\n    return (\n      <div className='messaging__channel-header__avatars two'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={40} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length === 3) {\n    return (\n      <div className='messaging__channel-header__avatars three'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[2])} shape='square' size={20} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length >= 4) {\n    return (\n      <div className='messaging__channel-header__avatars four'>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 1])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[members.length - 2])} shape='square' size={20} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 3])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[members.length - 4])} shape='square' size={20} />\n        </span>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst MessagingChannelHeader = (props) => {\n  const { client } = useChatContext();\n  const { channel } = useChannelStateContext();\n\n  const [channelName, setChannelName] = useState(channel?.data.name || '');\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const inputRef = useRef();\n\n  const members = Object.values(channel.state?.members || {}).filter(\n    (member) => member.user?.id !== client.user?.id,\n  );\n\n  const updateChannel = async (e) => {\n    if (e) e.preventDefault();\n\n    if (channelName && channelName !== channel.data.name) {\n      await channel.update(\n        { name: channelName },\n        { text: `Channel name changed to ${channelName}` },\n      );\n    }\n\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (!channelName) {\n      setTitle(\n        members.map((member) => member.user?.name || member.user?.id || 'Unnamed User').join(', '),\n      );\n    }\n  }, [channelName, members]);\n\n  const EditHeader = () => (\n    <form\n      style={{ flex: 1 }}\n      onSubmit={(e) => {\n        e.preventDefault();\n        inputRef.current.blur();\n      }}\n    >\n      <input\n        autoFocus\n        className='channel-header__edit-input'\n        onBlur={updateChannel}\n        onChange={(e) => setChannelName(e.target.value)}\n        placeholder='Type a new name for the chat'\n        ref={inputRef}\n        value={channelName}\n      />\n    </form>\n  );\n\n  return (\n    <div className='messaging__channel-header'>\n      <div id='mobile-nav-icon' className={`${props.theme}`} onClick={() => props.toggleMobile()}>\n        <HamburgerIcon />\n      </div>\n      {getAvatarGroup(members)}\n      {!isEditing ? (\n        <div className='channel-header__name'>{channelName || title}</div>\n      ) : (\n        <EditHeader />\n      )}\n      <div className='messaging__channel-header__right'>\n        <TypingIndicator />\n        {channelName !== 'Social Demo' &&\n          (!isEditing ? <ChannelInfoIcon {...{ isEditing, setIsEditing }} /> : <ChannelSaveIcon />)}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(MessagingChannelHeader);\n","import React from 'react';\n\nexport const SkeletonLoader = () => {\n  return (\n    <div style={{ position: 'relative' }}>\n      <ul className='skeleton-loader__list'>\n        <li>\n          <div className='skeleton-loader__avatar'></div>\n          <div className='skeleton-loader__text'>\n            <div></div>\n            <div></div>\n          </div>\n        </li>\n        <li>\n          <div className='skeleton-loader__avatar'></div>\n          <div className='skeleton-loader__text'>\n            <div></div>\n            <div></div>\n          </div>\n        </li>\n        <li>\n          <div className='skeleton-loader__avatar'></div>\n          <div className='skeleton-loader__text'>\n            <div></div>\n            <div></div>\n          </div>\n        </li>\n        <li>\n          <div className='skeleton-loader__avatar'></div>\n          <div className='skeleton-loader__text'>\n            <div></div>\n            <div></div>\n          </div>\n        </li>\n        <li>\n          <div className='skeleton-loader__avatar'></div>\n          <div className='skeleton-loader__text'>\n            <div></div>\n            <div></div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport './MessagingChannelList.css';\nimport { SkeletonLoader } from './SkeletonLoader';\n\nimport { CreateChannelIcon } from '../../assets';\nimport streamLogo from '../../assets/stream.png';\n\nconst MessagingChannelList = ({ children, error = false, loading, onCreateChannel }) => {\n  const { client, setActiveChannel } = useChatContext();\n  const { id, image = streamLogo, name = 'Example User' } = client.user || {};\n\n  useEffect(() => {\n    const getDemoChannel = async (client) => {\n      const channel = client.channel('messaging', 'first', { name: 'Social Demo' });\n      await channel.watch();\n      await channel.addMembers([client.user.id]);\n      setActiveChannel(channel);\n    };\n\n    if (!loading && !children?.props?.children?.length) {\n      getDemoChannel(client);\n    }\n  }, [loading]); // eslint-disable-line\n\n  const ListHeaderWrapper = ({ children }) => {\n    return (\n      <div className='messaging__channel-list'>\n        <div className='messaging__channel-list__header'>\n          <Avatar image={image} name={name} size={40} />\n          <div className='messaging__channel-list__header__name'>{name || id}</div>\n          <button className='messaging__channel-list__header__button' onClick={onCreateChannel}>\n            <CreateChannelIcon />\n          </button>\n        </div>\n        {children}\n      </div>\n    );\n  };\n\n  if (error) {\n    return (\n      <ListHeaderWrapper>\n        <div className='messaging__channel-list__message'>\n          Error loading conversations, please try again momentarily.\n        </div>\n      </ListHeaderWrapper>\n    );\n  }\n\n  if (loading) {\n    return (\n      <ListHeaderWrapper>\n        <div className='messaging__channel-list__message'>\n          <SkeletonLoader />\n        </div>\n      </ListHeaderWrapper>\n    );\n  }\n\n  return <ListHeaderWrapper>{children}</ListHeaderWrapper>;\n};\n\nexport default React.memo(MessagingChannelList);\n","import React, { useContext } from 'react';\nimport { Avatar, ChatContext } from 'stream-chat-react';\nimport { getCleanImage } from '../../assets';\n\nimport './MessagingChannelPreview.css';\n\nconst getAvatarGroup = (members) => {\n  if (members.length === 1) {\n    return <Avatar image={getCleanImage(members[0])} size={40} />;\n  }\n\n  if (members.length === 2) {\n    return (\n      <div className='channel-preview__avatars two'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={40} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length === 3) {\n    return (\n      <div className='channel-preview__avatars three'>\n        <span>\n          <Avatar image={getCleanImage(members[0])} shape='square' size={40} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[1])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[2])} shape='square' size={20} />\n        </span>\n      </div>\n    );\n  }\n\n  if (members.length >= 4) {\n    return (\n      <div className='channel-preview__avatars'>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 1])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[members.length - 2])} shape='square' size={20} />\n        </span>\n        <span>\n          <Avatar image={getCleanImage(members[members.length - 3])} shape='square' size={20} />\n          <Avatar image={getCleanImage(members[members.length - 4])} shape='square' size={20} />\n        </span>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst getTimeStamp = (channel) => {\n  let lastHours = channel.state.last_message_at?.getHours();\n  let lastMinutes = channel.state.last_message_at?.getMinutes();\n  let half = 'AM';\n\n  if (lastHours === undefined || lastMinutes === undefined) {\n    return '';\n  }\n\n  if (lastHours > 12) {\n    lastHours = lastHours - 12;\n    half = 'PM';\n  }\n\n  if (lastHours === 0) lastHours = 12;\n  if (lastHours === 12) half = 'PM';\n\n  if (lastMinutes.toString().length === 1) {\n    lastMinutes = `0${lastMinutes}`;\n  }\n\n  return `${lastHours}:${lastMinutes} ${half}`;\n};\n\nconst getChannelName = (members) => {\n  const defaultName = 'Johnny Blaze';\n\n  if (!members.length || members.length === 1) {\n    return members[0]?.user.name || defaultName;\n  }\n\n  return `${members[0]?.user.name || defaultName}, ${members[1]?.user.name || defaultName}`;\n};\n\nconst MessagingChannelPreview = (props) => {\n  const { channel, latestMessage, setActiveChannel, setIsCreating } = props;\n\n  const { channel: activeChannel, client } = useContext(ChatContext);\n\n  const members = Object.values(channel.state.members).filter(\n    ({ user }) => user.id !== client.userID,\n  );\n\n  return (\n    <div\n      className={\n        channel?.id === activeChannel?.id\n          ? 'channel-preview__container selected'\n          : 'channel-preview__container'\n      }\n      onClick={() => {\n        setIsCreating(false);\n        setActiveChannel(channel);\n      }}\n    >\n      {getAvatarGroup(members)}\n      <div className='channel-preview__content-wrapper'>\n        <div className='channel-preview__content-top'>\n          <p className='channel-preview__content-name'>\n            {channel.data.name || getChannelName(members)}\n          </p>\n          <p className='channel-preview__content-time'>{getTimeStamp(channel)}</p>\n        </div>\n        <p className='channel-preview__content-message'>{latestMessage || 'Send a message'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MessagingChannelPreview;\n","import React, { useCallback, useContext } from 'react';\nimport { ImageDropzone } from 'react-file-utils';\nimport {\n  ChatAutoComplete,\n  EmojiPicker,\n  UploadsPreview,\n  useChannelStateContext,\n  useMessageInputContext,\n} from 'stream-chat-react';\n\nimport { GiphyContext } from '../../App';\nimport { EmojiIcon, LightningBoltSmall, SendIcon } from '../../assets';\n\nimport './MessagingInput.css';\n\nconst GiphyIcon = () => (\n  <div className='giphy-icon__wrapper'>\n    <LightningBoltSmall />\n    <p className='giphy-icon__text'>GIPHY</p>\n  </div>\n);\n\nconst MessagingInput = () => {\n  const { giphyState, setGiphyState } = useContext(GiphyContext);\n  const { acceptedFiles, maxNumberOfFiles, multipleUploads } = useChannelStateContext();\n\n  const messageInput = useMessageInputContext();\n\n  const onChange = useCallback(\n    (event) => {\n      const { value } = event.target;\n      const deletePressed = event.nativeEvent?.inputType === 'deleteContentBackward';\n\n      if (messageInput.text.length === 1 && deletePressed) {\n        setGiphyState(false);\n      }\n\n      if (!giphyState && messageInput.text.startsWith('/giphy') && !messageInput.numberOfUploads) {\n        event.target.value = value.replace('/giphy', '');\n        setGiphyState(true);\n      }\n\n      messageInput.handleChange(event);\n    },\n    [giphyState, messageInput.numberOfUploads, messageInput.text], // eslint-disable-line\n  );\n\n  return (\n    <div className='str-chat__messaging-input'>\n      <div\n        className='messaging-input__button emoji-button'\n        role='button'\n        aria-roledescription='button'\n        onClick={messageInput.openEmojiPicker}\n        ref={messageInput.emojiPickerRef}\n      >\n        <EmojiIcon />\n      </div>\n      <ImageDropzone\n        accept={acceptedFiles}\n        handleFiles={messageInput.uploadNewFiles}\n        multiple={multipleUploads}\n        disabled={\n          (maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles) ||\n          giphyState\n        }\n      >\n        <div className='messaging-input__input-wrapper'>\n          {giphyState && !messageInput.numberOfUploads && <GiphyIcon />}\n          <UploadsPreview />\n          <ChatAutoComplete onChange={onChange} rows={1} placeholder='Send a message' />\n        </div>\n      </ImageDropzone>\n      <div\n        className='messaging-input__button'\n        role='button'\n        aria-roledescription='button'\n        onClick={messageInput.handleSubmit}\n      >\n        <SendIcon />\n      </div>\n      <EmojiPicker />\n    </div>\n  );\n};\n\nexport default React.memo(MessagingInput);\n","import React from 'react';\n\nimport './MessagingThread.css';\n\nimport { CloseThreadIcon } from '../../assets';\n\nconst MessagingThreadHeader = ({ closeThread, thread }) => {\n  const getReplyCount = () => {\n    if (!thread?.reply_count) return '';\n    if (thread.reply_count === 1) return '1 reply';\n    return `${thread.reply_count} Replies`;\n  };\n\n  return (\n    <div className='custom-thread-header'>\n      <div className='custom-thread-header__left'>\n        <p className='custom-thread-header__left-title'>Thread</p>\n        <p className='custom-thread-header__left-count'>{getReplyCount()}</p>\n      </div>\n      <CloseThreadIcon {...{ closeThread }} />\n    </div>\n  );\n};\n\nexport default MessagingThreadHeader;\n","import React, { useContext } from 'react';\nimport { logChatPromiseExecution } from 'stream-chat';\nimport {\n  MessageList,\n  MessageInput,\n  Thread,\n  Window,\n  useChannelActionContext,\n} from 'stream-chat-react';\n\nimport { MessagingChannelHeader, MessagingInput } from '../../components';\n\nimport { GiphyContext } from '../../App';\n\nexport const ChannelInner = (props) => {\n  const { theme, toggleMobile } = props;\n\n  const { giphyState, setGiphyState } = useContext(GiphyContext);\n  const { sendMessage } = useChannelActionContext();\n\n  const overrideSubmitHandler = (message) => {\n    let updatedMessage;\n\n    if (message.attachments?.length && message.text?.startsWith('/giphy')) {\n      const updatedText = message.text.replace('/giphy', '');\n      updatedMessage = { ...message, text: updatedText };\n    }\n\n    if (giphyState) {\n      const updatedText = `/giphy ${message.text}`;\n      updatedMessage = { ...message, text: updatedText };\n    }\n\n    if (sendMessage) {\n      const newMessage = updatedMessage || message;\n      const parentMessage = newMessage.parent;\n\n      const messageToSend = {\n        ...newMessage,\n        parent: parentMessage\n          ? {\n              ...parentMessage,\n              created_at: parentMessage.created_at?.toString(),\n              pinned_at: parentMessage.pinned_at?.toString(),\n              updated_at: parentMessage.updated_at?.toString(),\n            }\n          : undefined,\n      };\n\n      const sendMessagePromise = sendMessage(messageToSend);\n      logChatPromiseExecution(sendMessagePromise, 'send message');\n    }\n\n    setGiphyState(false);\n  };\n\n  const actions = ['delete', 'edit', 'flag', 'mute', 'react', 'reply'];\n\n  return (\n    <>\n      <Window>\n        <MessagingChannelHeader theme={theme} toggleMobile={toggleMobile} />\n        <MessageList messageActions={actions} />\n        <MessageInput focus overrideSubmitHandler={overrideSubmitHandler} />\n      </Window>\n      <Thread Input={MessagingInput} />\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat, Channel, ChannelList } from 'stream-chat-react';\nimport { useChecklist } from './ChecklistTasks';\n\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\n\nimport {\n  CreateChannel,\n  CustomMessage,\n  MessagingChannelList,\n  MessagingChannelPreview,\n  MessagingInput,\n  MessagingThreadHeader,\n} from './components';\n\nimport { getRandomImage } from './assets';\nimport { ChannelInner } from './components/ChannelInner/ChannelInner';\n\nconst urlParams = new URLSearchParams(window.location.search);\n\nconst apiKey = urlParams.get('apikey') || process.env.REACT_APP_STREAM_KEY;\nconst user = urlParams.get('user') || process.env.REACT_APP_USER_ID;\nconst userToken = urlParams.get('user_token') || process.env.REACT_APP_USER_TOKEN;\nconst targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\n\nconst noChannelNameFilter = urlParams.get('no_channel_name_filter') || false;\nconst skipNameImageSet = urlParams.get('skip_name_image_set') || false;\n\nconst filters = noChannelNameFilter\n  ? { type: 'messaging', members: { $in: [user] } }\n  : { type: 'messaging', name: 'Social Demo' };\nconst options = { state: true, watch: true, presence: true, limit: 8 };\nconst sort = {\n  last_message_at: -1,\n  updated_at: -1,\n  cid: 1,\n};\n\nconst userToConnect = { id: user, name: user, image: getRandomImage() };\n\nif (skipNameImageSet) {\n  delete userToConnect.name;\n  delete userToConnect.image;\n}\n\nexport const GiphyContext = React.createContext({});\n\nconst App = () => {\n  const [chatClient, setChatClient] = useState(null);\n  const [giphyState, setGiphyState] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isMobileNavVisible, setMobileNav] = useState(false);\n  const [theme, setTheme] = useState('dark');\n\n  useChecklist(chatClient, targetOrigin);\n\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance(apiKey);\n      await client.connectUser(userToConnect, userToken);\n      setChatClient(client);\n    };\n\n    initChat();\n\n    return () => chatClient.disconnectUser();\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    const handleThemeChange = ({ data, origin }) => {\n      // handle events only from trusted origin\n      if (origin === targetOrigin) {\n        if (data === 'light' || data === 'dark') {\n          setTheme(data);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleThemeChange);\n    return () => window.removeEventListener('message', handleThemeChange);\n  }, []);\n\n  useEffect(() => {\n    const mobileChannelList = document.querySelector('#mobile-channel-list');\n    if (isMobileNavVisible && mobileChannelList) {\n      mobileChannelList.classList.add('show');\n      document.body.style.overflow = 'hidden';\n    } else if (!isMobileNavVisible && mobileChannelList) {\n      mobileChannelList.classList.remove('show');\n      document.body.style.overflow = 'auto';\n    }\n  }, [isMobileNavVisible]);\n\n  useEffect(() => {\n    /*\n     * Get the actual rendered window height to set the container size properly.\n     * In some browsers (like Safari) the nav bar can override the app.\n     */\n    const setAppHeight = () => {\n      const doc = document.documentElement;\n      doc.style.setProperty('--app-height', `${window.innerHeight}px`);\n    };\n\n    setAppHeight();\n\n    window.addEventListener('resize', setAppHeight);\n    return () => window.removeEventListener('resize', setAppHeight);\n  }, []);\n\n  const toggleMobile = () => setMobileNav(!isMobileNavVisible);\n\n  const giphyContextValue = { giphyState, setGiphyState };\n\n  if (!chatClient) return null;\n\n  return (\n    <Chat client={chatClient} theme={`messaging ${theme}`}>\n      <div id='mobile-channel-list' onClick={toggleMobile}>\n        <ChannelList\n          filters={filters}\n          sort={sort}\n          options={options}\n          List={(props) => (\n            <MessagingChannelList {...props} onCreateChannel={() => setIsCreating(!isCreating)} />\n          )}\n          Preview={(props) => <MessagingChannelPreview {...props} {...{ setIsCreating }} />}\n        />\n      </div>\n      <div>\n        <Channel\n          Input={MessagingInput}\n          maxNumberOfFiles={10}\n          Message={CustomMessage}\n          multipleUploads={true}\n          ThreadHeader={MessagingThreadHeader}\n          TypingIndicator={() => null}\n        >\n          {isCreating && (\n            <CreateChannel toggleMobile={toggleMobile} onClose={() => setIsCreating(false)} />\n          )}\n          <GiphyContext.Provider value={giphyContextValue}>\n            <ChannelInner theme={theme} toggleMobile={toggleMobile} />\n          </GiphyContext.Provider>\n        </Channel>\n      </div>\n    </Chat>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
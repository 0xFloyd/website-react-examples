{"version":3,"sources":["assets/userImages/photo-1438761681033-6461ffad8d80.jpeg","assets/userImages/photo-1463453091185-61582044d556.jpeg","assets/userImages/photo-1503467913725-8484b65b0715.jpeg","assets/userImages/photo-1519345182560-3f2917c472ef.jpeg","assets/userImages/photo-1506089676908-3592f7389d4d.jpeg","assets/userImages/photo-1507003211169-0a1dd7228f2d.jpeg","assets/userImages/photo-1517202383675-eb0a6e27775f.jpeg","assets/userImages/photo-1541271696563-3be2f555fc4e.jpeg","assets/userImages/photo-1542345812-d98b5cd6cf98.jpeg","assets/userImages/photo-1546539782-6fc531453083.jpeg","assets/userImages/photo-1546623381-d6d69cd69955.jpeg","assets/userImages/photo-1546820389-44d77e1f3b31.jpeg","assets/userImages/photo-1548946526-f69e2424cf45.jpeg","assets/userImages/photo-1549351236-caca0f174515.jpeg","assets/userImages/photo-1551069613-1904dbdcda11.jpeg","assets/userImages/photo-1554384645-13eab165c24b.jpeg","assets/userImages/photo-1569443693539-175ea9f007e8.jpeg","assets/userImages/photo-1573140247632-f8fd74997d5c.jpeg","assets/userImages/photo-1546456073-6712f79251bb.jpeg","assets/userImages/photo-1502378735452-bc7d86632805.jpeg","assets/userImages/photo-1546967191-fdfb13ed6b1e.jpeg","assets/userImages/photo-1502937406922-305bb2789e95.jpeg","assets/userImages/photo-1552058544-f2b08422138a.jpeg","assets/userImages/photo-1531251445707-1f000e1e87d0.jpeg","assets/AddChannel.js","assets/BoldIcon.js","assets/ChannelInfo.js","assets/CloseCreateChannel.js","assets/CloseThreadIcon.js","assets/CodeSnippet.js","assets/HashIcon.js","assets/InviteIcon.js","assets/ItalicsIcon.js","assets/LightningBoltSmall.js","assets/PinIcon.js","assets/SearchIcon.js","assets/SendButton.js","assets/SideBarFlag.js","assets/SideBarLogo.js","assets/SmileyFace.js","assets/StrikeThroughIcon.js","assets/index.js","ChecklistTasks.js","components/PinnedMessageList/PinnedMessageList.js","components/TeamChannelHeader/TeamChannelHeader.js","components/TeamMessageInput/ThreadMessageInput.js","components/ChannelContainer/ChannelInner.js","components/ChannelEmptyState/ChannelEmptyState.js","components/CreateChannel/UserList.js","components/CreateChannel/CreateChannel.js","components/EditChannel/EditChannel.js","components/TeamMessage/TeamMessage.js","components/TeamTypingIndicator/TeamTypingIndicator.js","components/TeamMessageInput/TeamMessageInput.js","components/ChannelContainer/ChannelContainer.js","components/ChannelSearch/utils.js","components/ChannelSearch/ResultsDropdown.js","components/ChannelSearch/ChannelSearch.js","components/TeamChannelList/TeamChannelList.js","components/TeamChannelPreview/TeamChannelPreview.js","components/ChannelListContainer/ChannelListContainer.js","App.js","serviceWorker.js","index.js"],"names":["AddChannel","setCreateType","setIsCreating","setIsEditing","type","width","height","viewBox","fill","xmlns","onClick","prevState","d","fillOpacity","BoldIcon","boldState","resetIconState","setBoldState","bold","ChannelInfo","CloseCreateChannel","CloseThreadIcon","closeThread","setPinsOpen","e","className","fillRule","clipRule","x","y","stroke","rx","CodeSnippet","codeState","setCodeState","code","HashIcon","cx","cy","r","InviteIcon","style","marginLeft","ItalicsIcon","italicState","setItalicState","italic","LightningBoltSmall","PinIcon","SearchIcon","SendButton","SideBarFlag","SideBarLogo","SmileyFace","openEmojiPicker","display","StrikeThroughIcon","strikeThroughState","setStrikeThroughState","strikeThrough","randomImages","Avatar1","Avatar2","Avatar3","Avatar4","Avatar5","Avatar6","Avatar7","Avatar8","Avatar9","Avatar10","Avatar11","Avatar12","Avatar13","Avatar14","Avatar15","Avatar16","Avatar17","Avatar18","Avatar19","Avatar20","Avatar21","Avatar22","Avatar23","Avatar24","Avatar25","useChecklist","chatClient","targetOrigin","useEffect","parent","notify","message","window","postMessage","handleNewEvent","command","attachments","length","og_scrape_url","parent_id","on","off","PinnedMessageList","props","useChannelActionContext","channel","useChannelStateContext","state","pinnedMessages","map","i","groupStyles","Message","MessageTeam","id","TeamChannelHeader","watchers","client","useChatContext","watcher_count","teamHeader","data","name","members","Object","values","filter","user","userID","additionalMembers","Avatar","image","size","getMessagingHeader","ThreadMessageInput","useContext","GiphyContext","giphyState","setGiphyState","messageInput","useMessageInputContext","onChange","useCallback","event","text","nativeEvent","inputType","startsWith","target","value","replace","handleChange","GiphyIcon","ChatAutoComplete","rows","placeholder","role","aria-roledescription","handleSubmit","EmojiPicker","React","createContext","ChannelInner","pinsOpen","useState","giphyStateObj","sendMessage","teamPermissions","defaultPinPermissions","team","messagingPermissions","messaging","pinnedPermissions","Provider","Window","MessageList","disableQuotedMessages","pinPermissions","MessageInput","overrideSubmitHandler","updatedMessage","mentioned_users","updatedText","sendMessagePromise","logChatPromiseExecution","Thread","additionalMessageInputProps","Input","ChannelEmptyState","member","memberString","forEach","getUserText","ListContainer","children","UserItem","index","setSelectedUsers","selected","setSelected","prevUsers","prevUser","getLastActive","UserList","filters","error","setError","listEmpty","setListEmpty","loading","setLoading","users","setUsers","getUsers","a","queryUsers","$ne","limit","response","ChannelNameInput","channelName","setChannelName","preventDefault","CreateChannel","createType","setActiveChannel","selectedUsers","createChannel","newChannel","watch","console","log","EditChannel","updateChannel","update","addMembers","TeamMessage","useMessageContext","handleOpenThread","isPinned","TeamTypingIndicator","typing","useTypingContext","TeamMessageInput","thread","deletePressed","numberOfUploads","slice","UploadsPreview","getPlaceholder","ThreadHeader","reply_count","ChannelContainer","isCreating","isEditing","channelMembers","keys","$nin","Channel","EmptyStateIndicator","messageProps","threadProps","TypingIndicator","channelByUser","member_count","$eq","queryChannels","existingChannel","SearchResult","focusedId","setChannel","undefined","ResultsDropdown","teamChannels","directChannels","setQuery","document","addEventListener","ChannelSearch","allChannels","setAllChannels","setTeamChannels","setDirectChannels","focused","setFocused","setFocusedId","query","handleKeyDown","key","prevFocused","keyCode","removeEventListener","getChannels","channelResponse","$autocomplete","userResponse","$and","Promise","all","channels","concat","getChannelsDebounce","_debounce","trailing","ChannelList","childArray","newChildren","child","TeamChannelList","memo","TeamChannelPreview","activeChannel","ChannelPreview","DirectPreview","defaultName","SideBar","CompanyHeader","ChannelListContainer","options","sort","List","listProps","Preview","previewProps","urlParams","URLSearchParams","location","search","apiKey","get","process","theme","userToken","REACT_APP_TARGET_ORIGIN","i18nInstance","Streami18n","language","translationsForLanguage","enTranslations","presence","last_message_at","updated_at","StreamChat","getInstance","connectUser","Math","floor","random","getRandomImage","App","handleColorChange","color","root","documentElement","setProperty","Chat","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c23e54b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/photo-1438761681033-6461ffad8d80.613ac608.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1463453091185-61582044d556.3619e52a.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1503467913725-8484b65b0715.95ccd4b9.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1519345182560-3f2917c472ef.a2e6c02e.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1506089676908-3592f7389d4d.56a08c5d.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1507003211169-0a1dd7228f2d.63bee4f7.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1517202383675-eb0a6e27775f.4457c8ec.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1541271696563-3be2f555fc4e.24ecd158.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1542345812-d98b5cd6cf98.fc631d3d.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1546539782-6fc531453083.a7c849be.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1546623381-d6d69cd69955.84098cf1.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1546820389-44d77e1f3b31.879865ae.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1548946526-f69e2424cf45.c592c0d0.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1549351236-caca0f174515.d2fd8a6e.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1551069613-1904dbdcda11.6380bd9d.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1554384645-13eab165c24b.f45d7937.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1569443693539-175ea9f007e8.da18bfdc.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1573140247632-f8fd74997d5c.79b738bd.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1546456073-6712f79251bb.a031da78.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1502378735452-bc7d86632805.905b3e52.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1546967191-fdfb13ed6b1e.f4b6002c.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1502937406922-305bb2789e95.647d289b.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1552058544-f2b08422138a.ebadf7d3.jpeg\";","export default __webpack_public_path__ + \"static/media/photo-1531251445707-1f000e1e87d0.be76211f.jpeg\";","import React from 'react';\n\nexport const AddChannel = ({ setCreateType, setIsCreating, setIsEditing, type }) => (\n  <svg\n    width='14'\n    height='14'\n    viewBox='0 0 14 14'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    onClick={() => {\n      setCreateType(type);\n      setIsCreating((prevState) => !prevState);\n      setIsEditing(false);\n    }}\n  >\n    <path\n      d='M7 0C3.13438 0 0 3.13438 0 7C0 10.8656 3.13438 14 7 14C10.8656 14 14 10.8656 14 7C14 3.13438 10.8656 0 7 0ZM11 7.5H7.5V11H6.5V7.5H3V6.5H6.5V3H7.5V6.5H11V7.5Z'\n      fill='white'\n      fillOpacity='0.66'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const BoldIcon = ({ boldState, resetIconState, setBoldState }) => (\n  <div\n    onClick={() => {\n      const bold = boldState;\n      resetIconState();\n      setBoldState(!bold);\n    }}\n  >\n    <svg width='10' height='12' viewBox='0 0 10 12' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M7.63 5.82C8.46 5.24 9 4.38 9 3.5C9 1.57 7.43 0 5.5 0H0V12H6.25C8.04 12 9.5 10.54 9.5 8.75C9.5 7.45 8.73 6.34 7.63 5.82ZM2.5 2H5.25C6.08 2 6.75 2.67 6.75 3.5C6.75 4.33 6.08 5 5.25 5H2.5V2ZM5.75 10H2.5V7H5.75C6.58 7 7.25 7.67 7.25 8.5C7.25 9.33 6.58 10 5.75 10Z'\n        fill={boldState ? 'var(--primary-color)' : 'black'}\n        fillOpacity={boldState ? '1' : '0.2'}\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const ChannelInfo = () => (\n  <svg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M8.16602 6.49837H9.83269V4.83171H8.16602V6.49837ZM8.99936 15.665C5.32351 15.665 2.33268 12.6743 2.33268 8.99833C2.33268 5.32253 5.32351 2.33171 8.99936 2.33171C12.6752 2.33171 15.666 5.32253 15.666 8.99833C15.666 12.6743 12.6752 15.665 8.99936 15.665ZM8.99936 0.665039C4.39684 0.665039 0.666016 4.39587 0.666016 8.99833C0.666016 13.6009 4.39684 17.3317 8.99936 17.3317C13.6019 17.3317 17.3327 13.6009 17.3327 8.99833C17.3327 4.39587 13.6019 0.665039 8.99936 0.665039ZM8.16602 13.165H9.83269V8.165H8.16602V13.165Z'\n      fill='black'\n      fillOpacity='0.33'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CloseCreateChannel = ({ setIsCreating, setIsEditing }) => (\n  <svg\n    width='32'\n    height='32'\n    viewBox='0 0 32 32'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    onClick={() => {\n      if (setIsCreating) setIsCreating(false);\n      if (setIsEditing) setIsEditing(false);\n    }}\n  >\n    <path\n      d='M6.10042 6.10051C0.633603 11.5673 0.633603 20.4327 6.10042 25.8995C11.5672 31.3663 20.4326 31.3663 25.8994 25.8995C31.3662 20.4327 31.3662 11.5673 25.8994 6.10051C20.4326 0.633686 11.5672 0.633685 6.10042 6.10051ZM22.3639 11.0503L17.4141 16L22.3639 20.9497L20.9497 22.364L15.9999 17.4142L11.0502 22.364L9.63596 20.9497L14.5857 16L9.63596 11.0503L11.0502 9.63604L15.9999 14.5858L20.9497 9.63604L22.3639 11.0503Z'\n      fill='var(--primary-color)'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const CloseThreadIcon = ({ closeThread, setPinsOpen }) => (\n  <div\n    onClick={(e) => {\n      closeThread(e);\n      setPinsOpen(false);\n    }}\n    className='close-thread-icon'\n  >\n    <svg xmlns='http://www.w3.org/2000/svg' width='40' height='40' fill='none' viewBox='0 0 40 40'>\n      <path\n        fill='var(--primary-color)'\n        fillRule='evenodd'\n        d='M27.563 25.442L22.12 20l5.442-5.442a1.496 1.496 0 000-2.12 1.496 1.496 0 00-2.121 0L20 17.878l-5.441-5.442a1.496 1.496 0 00-2.121 0 1.496 1.496 0 000 2.121L17.879 20l-5.441 5.442a1.496 1.496 0 000 2.12 1.496 1.496 0 002.12 0L20 22.122l5.442 5.442a1.496 1.496 0 002.12 0 1.504 1.504 0 000-2.121z'\n        clipRule='evenodd'\n      ></path>\n      <rect width='39' height='39' x='0.5' y='0.5' stroke='#E9E9EA' rx='19.5'></rect>\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const CodeSnippet = ({ codeState, resetIconState, setCodeState }) => (\n  <div\n    onClick={() => {\n      const code = codeState;\n      resetIconState();\n      setCodeState(!code);\n    }}\n  >\n    <svg width='20' height='12' viewBox='0 0 20 12' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M7.4 10.6L2.8 6L7.4 1.4L6 0L0 6L6 12L7.4 10.6ZM12.6 10.6L17.2 6L12.6 1.4L14 0L20 6L14 12L12.6 10.6Z'\n        fill={codeState ? 'var(--primary-color)' : 'black'}\n        fillOpacity={codeState ? '1' : '0.2'}\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const HashIcon = () => (\n  <svg width='72' height='72' viewBox='0 0 72 72' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <circle cx='36' cy='36' r='36' fill='var(--primary-color)' />\n    <path\n      d='M34.5368 33.696H38.5688L37.8548 38.904H33.7808L34.5368 33.696ZM29.2028 42.684L28.0268 51H32.1008L33.2768 42.684H37.3088L36.1748 51H40.2488L41.3828 42.684H45.0368V38.904H41.9288L42.6428 33.696H46.2968V29.916H43.1888L44.3228 21.6H40.2488L39.1148 29.916H35.0408L36.2168 21.6H32.1428L30.9668 29.916H26.9768V33.696H30.4628L29.7068 38.904H25.7168V42.684H29.2028Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const InviteIcon = () => (\n  <div style={{ marginLeft: '2px' }}>\n    <svg width='28' height='28' viewBox='0 0 28 28' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M14 0C6.26875 0 0 6.26875 0 14C0 21.7313 6.26875 28 14 28C21.7313 28 28 21.7313 28 14C28 6.26875 21.7313 0 14 0ZM21.1812 9.31875L12.4875 20.475C12.4187 20.5438 12.3062 20.6938 12.1687 20.6938C12.025 20.6938 11.9313 20.5938 11.85 20.5125C11.7688 20.4313 6.91875 15.7687 6.91875 15.7687L6.825 15.675C6.7875 15.6187 6.75625 15.55 6.75625 15.475C6.75625 15.4 6.7875 15.3312 6.825 15.275C6.85 15.25 6.86875 15.2313 6.89375 15.2C7.375 14.6938 8.35 13.6687 8.4125 13.6062C8.49375 13.525 8.5625 13.4187 8.7125 13.4187C8.86875 13.4187 8.96875 13.55 9.04375 13.625C9.11875 13.7 11.8562 16.3312 11.8562 16.3312L18.8125 7.39375C18.875 7.34375 18.95 7.30625 19.0312 7.30625C19.1125 7.30625 19.1875 7.3375 19.25 7.3875L21.1625 8.89375C21.2125 8.95625 21.2437 9.03125 21.2437 9.1125C21.25 9.19375 21.2188 9.2625 21.1812 9.31875Z'\n        fill='#1D9D67'\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const ItalicsIcon = ({ italicState, resetIconState, setItalicState }) => (\n  <div\n    onClick={() => {\n      const italic = italicState;\n      resetIconState();\n      setItalicState(!italic);\n    }}\n  >\n    <svg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M4 0V2H6.58L2.92 10H0V12H8V10H5.42L9.08 2H12V0H4Z'\n        fill={italicState ? 'var(--primary-color)' : 'black'}\n        fillOpacity={italicState ? '1' : '0.2'}\n      />\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const LightningBoltSmall = () => (\n  <svg width='6' height='12' viewBox='0 0 6 12' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M2.75774 0.666748H5.66683L3.72744 4.54554H5.66683L2.03047 11.3334L2.75774 6.48493H0.333496L2.75774 0.666748Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const PinIcon = () => (\n  <svg width='14' height='13' viewBox='0 0 14 13' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M13.3518 6.686L6.75251 0.0866699L5.80984 1.02867L6.75318 1.972V1.97334L3.45318 5.272L3.45251 5.27334L2.50984 4.32934L1.56718 5.27267L4.39584 8.10067L0.624512 11.8713L1.56718 12.814L5.33851 9.04334L8.16718 11.8713L9.10984 10.9293L8.16718 9.986L11.4672 6.686L12.4098 7.62867L13.3518 6.686ZM7.22451 9.04267L7.22385 9.04334L4.39584 6.21467L7.69518 2.91467L10.5232 5.74267L7.22451 9.04267Z'\n      fill='#858688'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SearchIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'>\n    <path\n      fill='#fff'\n      fillOpacity='0.66'\n      fillRule='evenodd'\n      d='M2.7 6.95a4.25 4.25 0 117.306 2.954 1.001 1.001 0 00-.102.102A4.25 4.25 0 012.7 6.95zm7.906 5.07a6.25 6.25 0 111.414-1.414l2.987 2.987a1 1 0 11-1.414 1.414l-2.987-2.987z'\n      clipRule='evenodd'\n    ></path>\n  </svg>\n);\n","import React from 'react';\n\nexport const SendButton = () => (\n  <svg width='14' height='12' viewBox='0 0 14 12' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M0.5 12L13.5 6L0.5 0V4.66666L9.8125 6L0.5 7.33334V12Z'\n      fill='black'\n      fillOpacity='0.33'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SideBarFlag = () => (\n  <svg width='20' height='22' viewBox='0 0 20 22' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.1848 13.5851C12.3269 13.6514 12.4785 13.684 12.6311 13.684C12.8722 13.684 13.1122 13.6008 13.3059 13.4398L19.6215 8.17672C19.8479 7.98725 19.9858 7.71252 19.9984 7.41674C20.0121 7.12095 19.9005 6.83359 19.691 6.62412L13.3753 0.308435C12.9638 -0.103137 12.2985 -0.103137 11.8869 0.308435L9.4733 2.72208L8.11227 1.36105C7.7007 0.949477 7.03545 0.949477 6.62387 1.36105L0.308191 7.67673C-0.103381 8.0883 -0.103381 8.75356 0.308191 9.16513L12.9396 21.7965L14.428 20.3081L7.80385 13.684L11.5785 9.90933V12.6314C11.5785 13.0398 11.8154 13.4114 12.1848 13.5851Z'\n      fill='white'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SideBarLogo = () => (\n  <svg width='22' height='16' viewBox='0 0 22 16' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M17.0903 16L21.3143 0.291999H17.9263L15.3523 11.116H15.3083L12.6243 0.291999H9.39031L6.6623 10.984H6.6183L4.1323 0.291999H0.678305L4.8363 16H8.3343L10.9523 5.308H10.9963L13.6583 16H17.0903Z'\n      fill='var(--primary-color)'\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const SmileyFace = ({ openEmojiPicker }) => (\n  <div onClick={openEmojiPicker} style={{ display: 'flex' }}>\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'>\n      <path\n        fill='#000'\n        fillOpacity='0.2'\n        fillRule='evenodd'\n        d='M1.6 8a6.4 6.4 0 1112.8 0A6.4 6.4 0 011.6 8zM8 0a8 8 0 100 16A8 8 0 008 0zM6 7.2a1.2 1.2 0 100-2.4 1.2 1.2 0 000 2.4zM11.2 6a1.2 1.2 0 11-2.4 0 1.2 1.2 0 012.4 0zM5.455 9.141a.8.8 0 10-1.31.918c.542.774 1.578 1.737 2.962 2.024 1.46.303 3.1-.184 4.688-1.948a.8.8 0 00-1.19-1.07C9.313 10.5 8.22 10.68 7.433 10.517c-.863-.18-1.586-.817-1.978-1.376z'\n        clipRule='evenodd'\n      ></path>\n    </svg>\n  </div>\n);\n","import React from 'react';\n\nexport const StrikeThroughIcon = ({\n  resetIconState,\n  strikeThroughState,\n  setStrikeThroughState,\n}) => (\n  <div\n    onClick={() => {\n      const strikeThrough = strikeThroughState;\n      resetIconState();\n      setStrikeThroughState(!strikeThrough);\n    }}\n  >\n    <svg width='16' height='14' viewBox='0 0 16 14' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M3.76889 5.11111C3.53778 4.68444 3.42222 4.19556 3.42222 3.62667C3.42222 3.08444 3.53778 2.59556 3.77778 2.14222C4.00889 1.69778 4.33778 1.31556 4.76444 0.995555C5.19111 0.684444 5.69778 0.435556 6.27556 0.257778C6.86222 0.0888889 7.51111 0 8.21333 0C8.93333 0 9.58222 0.0977777 10.1778 0.302222C10.7644 0.497778 11.2711 0.782222 11.68 1.13778C12.0978 1.49333 12.4178 1.92 12.64 2.40889C12.8622 2.89778 12.9778 3.43111 12.9778 4.01778H10.3022C10.3022 3.74222 10.2578 3.49333 10.1689 3.26222C10.0889 3.02222 9.95556 2.82667 9.77778 2.65778C9.6 2.48889 9.37778 2.36444 9.11111 2.26667C8.84444 2.17778 8.52444 2.12444 8.16889 2.12444C7.82222 2.12444 7.51111 2.16 7.25333 2.24C6.99556 2.32 6.78222 2.42667 6.61333 2.56C6.44444 2.70222 6.31111 2.86222 6.22222 3.04889C6.13333 3.23556 6.08889 3.43111 6.08889 3.63556C6.08889 4.06222 6.31111 4.41778 6.74667 4.71111C7.08444 4.93333 7.43111 5.13778 8 5.33333H3.90222C3.85778 5.26222 3.80444 5.18222 3.76889 5.11111ZM16 8V6.22222H0V8H8.55111C8.71111 8.06222 8.90667 8.12444 9.04 8.17778C9.36889 8.32889 9.62667 8.48 9.81333 8.63111C10 8.78222 10.1244 8.95111 10.1956 9.13778C10.2578 9.31556 10.2933 9.52 10.2933 9.75111C10.2933 9.95556 10.2489 10.1511 10.1689 10.3378C10.0889 10.5156 9.96445 10.6756 9.79556 10.8089C9.62667 10.9422 9.42222 11.04 9.16444 11.12C8.90667 11.1911 8.60444 11.2356 8.26667 11.2356C7.88444 11.2356 7.52889 11.2 7.21778 11.12C6.90667 11.04 6.63111 10.9156 6.40889 10.7467C6.18667 10.5778 6.00889 10.3556 5.88444 10.08C5.76 9.80444 5.66222 9.40444 5.66222 9.00445H3.02222C3.02222 9.49333 3.09333 10.0089 3.23556 10.4089C3.37778 10.8089 3.56444 11.1644 3.81333 11.4844C4.06222 11.7956 4.34667 12.0711 4.68444 12.3022C5.01333 12.5333 5.37778 12.7289 5.76889 12.88C6.16 13.0311 6.56889 13.1467 6.99556 13.2267C7.42222 13.2978 7.84889 13.3422 8.27556 13.3422C8.98667 13.3422 9.63556 13.2622 10.2133 13.0933C10.7911 12.9244 11.2889 12.6933 11.6978 12.3911C12.1067 12.0889 12.4267 11.7067 12.6489 11.2622C12.8711 10.8178 12.9867 10.3111 12.9867 9.74222C12.9867 9.20889 12.8978 8.72889 12.7111 8.31111C12.6667 8.21333 12.6133 8.10667 12.56 8.01778H16V8Z'\n        fill={strikeThroughState ? 'var(--primary-color)' : 'black'}\n        fillOpacity={strikeThroughState ? '1' : '0.2'}\n      />\n    </svg>\n  </div>\n);\n","import Avatar1 from '../assets/userImages/photo-1438761681033-6461ffad8d80.jpeg';\nimport Avatar2 from '../assets/userImages/photo-1463453091185-61582044d556.jpeg';\nimport Avatar3 from '../assets/userImages/photo-1503467913725-8484b65b0715.jpeg';\nimport Avatar4 from '../assets/userImages/photo-1519345182560-3f2917c472ef.jpeg';\nimport Avatar5 from '../assets/userImages/photo-1506089676908-3592f7389d4d.jpeg';\nimport Avatar6 from '../assets/userImages/photo-1507003211169-0a1dd7228f2d.jpeg';\nimport Avatar7 from '../assets/userImages/photo-1517202383675-eb0a6e27775f.jpeg';\nimport Avatar8 from '../assets/userImages/photo-1519345182560-3f2917c472ef.jpeg';\nimport Avatar9 from '../assets/userImages/photo-1541271696563-3be2f555fc4e.jpeg';\nimport Avatar10 from '../assets/userImages/photo-1542345812-d98b5cd6cf98.jpeg';\nimport Avatar11 from '../assets/userImages/photo-1546539782-6fc531453083.jpeg';\nimport Avatar12 from '../assets/userImages/photo-1546623381-d6d69cd69955.jpeg';\nimport Avatar13 from '../assets/userImages/photo-1546820389-44d77e1f3b31.jpeg';\nimport Avatar14 from '../assets/userImages/photo-1548946526-f69e2424cf45.jpeg';\nimport Avatar15 from '../assets/userImages/photo-1549351236-caca0f174515.jpeg';\nimport Avatar16 from '../assets/userImages/photo-1551069613-1904dbdcda11.jpeg';\nimport Avatar17 from '../assets/userImages/photo-1554384645-13eab165c24b.jpeg';\nimport Avatar18 from '../assets/userImages/photo-1569443693539-175ea9f007e8.jpeg';\nimport Avatar19 from '../assets/userImages/photo-1573140247632-f8fd74997d5c.jpeg';\nimport Avatar20 from '../assets/userImages/photo-1546456073-6712f79251bb.jpeg';\nimport Avatar21 from '../assets/userImages/photo-1502378735452-bc7d86632805.jpeg';\nimport Avatar22 from '../assets/userImages/photo-1546967191-fdfb13ed6b1e.jpeg';\nimport Avatar23 from '../assets/userImages/photo-1502937406922-305bb2789e95.jpeg';\nimport Avatar24 from '../assets/userImages/photo-1552058544-f2b08422138a.jpeg';\nimport Avatar25 from '../assets/userImages/photo-1531251445707-1f000e1e87d0.jpeg';\n\nexport { AddChannel } from './AddChannel';\nexport { BoldIcon } from './BoldIcon';\nexport { ChannelInfo } from './ChannelInfo';\nexport { CloseCreateChannel } from './CloseCreateChannel';\nexport { CloseThreadIcon } from './CloseThreadIcon';\nexport { CodeSnippet } from './CodeSnippet';\nexport { HashIcon } from './HashIcon';\nexport { InviteIcon } from './InviteIcon';\nexport { ItalicsIcon } from './ItalicsIcon';\nexport { LightningBolt } from './LightningBolt';\nexport { LightningBoltSmall } from './LightningBoltSmall';\nexport { PinIcon } from './PinIcon';\nexport { SearchIcon } from './SearchIcon';\nexport { SendButton } from './SendButton';\nexport { SideBarFlag } from './SideBarFlag';\nexport { SideBarLogo } from './SideBarLogo';\nexport { SmileyFace } from './SmileyFace';\nexport { StrikeThroughIcon } from './StrikeThroughIcon';\n\nconst randomImages = [ \n  Avatar1,\n  Avatar2,\n  Avatar3,\n  Avatar4,\n  Avatar5,\n  Avatar6,\n  Avatar7,\n  Avatar8,\n  Avatar9,\n  Avatar10,\n  Avatar11,\n  Avatar12,\n  Avatar13,\n  Avatar14,\n  Avatar15,\n  Avatar16,\n  Avatar17,\n  Avatar18,\n  Avatar19,\n  Avatar20,\n  Avatar21,\n  Avatar22,\n  Avatar23,\n  Avatar24,\n  Avatar25,\n];\n\nexport const getRandomImage = () => {\n  const index = Math.floor(Math.random() * 24);\n  return randomImages[index];\n};\n","import { useEffect } from 'react';\n\nconst notifyParent = (parent) => (message) => {\n  window.parent.postMessage(message, parent);\n};\n\nconst YOUTUBE_LINK = 'https://youtu.be/Ujvy-DEA-UM';\n\n// We have to keep this task list up-to-date with the website's checklist\nconst [REACT_TO_MESSAGE, RUN_GIPHY, SEND_YOUTUBE, DRAG_DROP, START_THREAD, SEND_MESSAGE] = [\n  'react-to-message',\n  'run-giphy',\n  'send-youtube',\n  'drag-drop-image',\n  'start-thread',\n  'send-message',\n];\n\nexport const useChecklist = (chatClient, targetOrigin) => {\n  useEffect(() => {\n    const notify = notifyParent(targetOrigin);\n    const handleNewEvent = ({ type, message }) => {\n      switch (type) {\n        case 'reaction.new':\n          notify(REACT_TO_MESSAGE);\n          break;\n        case 'message.new':\n          if (message.command === 'giphy') {\n            notify(RUN_GIPHY);\n            break;\n          }\n          if (message.attachments.length) {\n            if (\n              message.attachments[0].type === 'video' &&\n              message.attachments[0].og_scrape_url === YOUTUBE_LINK\n            ) {\n              notify(SEND_YOUTUBE);\n              break;\n            }\n            if (message.attachments[0].type === 'image') {\n              notify(DRAG_DROP);\n              break;\n            }\n          }\n          if (message.parent_id) {\n            notify(START_THREAD);\n            break;\n          }\n          notify(SEND_MESSAGE);\n          break;\n        default:\n          break;\n      }\n    };\n    if (chatClient) {\n      chatClient.on(handleNewEvent);\n    }\n    return () => chatClient?.off(handleNewEvent);\n  }, [chatClient, targetOrigin]);\n};\n","import React from 'react';\nimport { Message, MessageTeam, useChannelActionContext, useChannelStateContext } from 'stream-chat-react';\n\nimport './PinnedMessageList.css';\n\nimport { CloseThreadIcon } from '../../assets';\n\nexport const PinnedMessageList = (props) => {\n  const { setPinsOpen } = props;\n\n  const { closeThread } = useChannelActionContext();\n\n  const { channel } = useChannelStateContext();\n\n  return (\n    <div className='pinned-messages__container'>\n      <div className='pinned-messages__header'>\n        <p className='pinned-messages__header-text'>Pins</p>\n        <CloseThreadIcon {...{ closeThread, setPinsOpen }} />\n      </div>\n      <div className='pinned-messages__list'>\n        {channel.state.pinnedMessages.map((message, i) => (\n          <Message\n            groupStyles={['single']}\n            Message={MessageTeam}\n            key={message.id}\n            message={message}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Avatar, useChannelActionContext, useChannelStateContext, useChatContext } from 'stream-chat-react';\n\nimport './TeamChannelHeader.css';\n\nimport { ChannelInfo, PinIcon } from '../../assets';\n\nexport const TeamChannelHeader = ({ setIsEditing, setPinsOpen }) => {\n  const { client } = useChatContext();\n  const { closeThread } = useChannelActionContext();\n  const { channel, watcher_count } = useChannelStateContext();\n\n  const teamHeader = `# ${channel.data.name || channel.data.id || 'random'}`;\n\n  const getMessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID,\n    );\n    const additionalMembers = members.length - 3;\n\n    if (!members.length) {\n      return (\n        <div className='team-channel-header__name-wrapper'>\n          <Avatar image={null} size={32} />\n          <p className='team-channel-header__name user'>Johnny Blaze</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className='team-channel-header__name-wrapper'>\n        {members.map(({ user }, i) => {\n          if (i > 2) return null;\n          return (\n            <div key={i} className='team-channel-header__name-multi'>\n              <Avatar image={user.image} size={32} />\n              <p className='team-channel-header__name user'>\n                {user.name || user.id || 'Johnny Blaze'}\n              </p>\n            </div>\n          );\n        })}\n        {additionalMembers > 0 && (\n          <p className='team-channel-header__name user'>{`and ${additionalMembers} more`}</p>\n        )}\n      </div>\n    );\n  };\n\n  const getWatcherText = (watchers) => {\n    if (!watchers) return 'No users online';\n    if (watchers === 1) return '1 user online';\n    return `${watchers} users online`;\n  };\n\n  return (\n    <div className='team-channel-header__container'>\n      {channel.type === 'messaging' ? (\n        getMessagingHeader()\n      ) : (\n        <div className='team-channel-header__channel-wrapper'>\n          <p className='team-channel-header__name'>{teamHeader}</p>\n          <span style={{ display: 'flex' }} onClick={() => setIsEditing(true)}>\n            <ChannelInfo />\n          </span>\n        </div>\n      )}\n      <div className='team-channel-header__right'>\n        <p className='team-channel-header__right-text'>{getWatcherText(watcher_count)}</p>\n        <div\n          className='team-channel-header__right-pin-wrapper'\n          onClick={(e) => {\n            closeThread(e);\n            setPinsOpen((prevState) => !prevState);\n          }}\n        >\n          <PinIcon />\n          <p className='team-channel-header__right-text'>Pins</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport { ChatAutoComplete, EmojiPicker, useMessageInputContext } from 'stream-chat-react';\n\nimport './ThreadMessageInput.css';\n\nimport { GiphyContext } from '../ChannelContainer/ChannelInner';\n\nimport {\n  LightningBoltSmall,\n  SendButton,\n  SmileyFace,\n} from '../../assets';\n\nexport const ThreadMessageInput = (props) => {\n  const { giphyState, setGiphyState } = useContext(GiphyContext)\n\n  const messageInput = useMessageInputContext();\n\n  const onChange = useCallback(\n    (event) => {\n      if (messageInput.text.length === 1 && event.nativeEvent.inputType === 'deleteContentBackward') {\n        setGiphyState(false);\n      }\n\n      if (messageInput.text.startsWith('/giphy') && !giphyState) {\n        event.target.value = event.target.value.replace('/giphy', '');\n        setGiphyState(true);\n      }\n\n      messageInput.handleChange(event);\n    },\n    [giphyState, messageInput, setGiphyState],\n  );\n\n  const GiphyIcon = () => (\n    <div className='giphy-icon__wrapper'>\n      <LightningBoltSmall />\n      <p className='giphy-icon__text'>GIPHY</p>\n    </div>\n  );\n\n  return (\n    <div className='thread-message-input__wrapper'>\n      <div className='thread-message-input__input'>\n        {giphyState && <GiphyIcon />}\n        <ChatAutoComplete\n          onChange={onChange}\n          rows={1}\n          placeholder='Reply'\n        />\n        <div className='thread-message-input__icons'>\n          <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\n        </div>\n        <div\n          className='thread-message-input__button'\n          role='button'\n          aria-roledescription='button'\n          onClick={messageInput.handleSubmit}\n        >\n          <SendButton />\n        </div>\n      </div>\n      <EmojiPicker />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { logChatPromiseExecution } from 'stream-chat';\n\nimport { \n  defaultPinPermissions,\n  MessageList,\n  MessageInput,\n  Thread,\n  Window,\n  useChannelActionContext \n} from 'stream-chat-react';\n\nimport { PinnedMessageList } from '../PinnedMessageList/PinnedMessageList';\nimport { TeamChannelHeader } from '../TeamChannelHeader/TeamChannelHeader';\nimport { ThreadMessageInput } from '../TeamMessageInput/ThreadMessageInput';\n\nexport const GiphyContext = React.createContext({});\n\nexport const ChannelInner = (props) => {\n  const { pinsOpen, setIsEditing, setPinsOpen } = props;\n\n  const [giphyState, setGiphyState] = useState(false);\n\n  const giphyStateObj = {\n    giphyState: giphyState,\n    setGiphyState\n  };\n\n  const { sendMessage } = useChannelActionContext();\n\n  const teamPermissions = { ...defaultPinPermissions.team, user: true };\n  const messagingPermissions = {\n    ...defaultPinPermissions.messaging,\n    user: true,\n  };\n  const pinnedPermissions = {\n    ...defaultPinPermissions,\n    team: teamPermissions,\n    messaging: messagingPermissions,\n  };\n\n  const overrideSubmitHandler = (message) => {\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: message.parent?.id,\n      parent: message.parent,\n      text: message.text,\n    };\n\n    if (giphyState) {\n      const updatedText = `/giphy ${message.text}`;\n      updatedMessage = { ...updatedMessage, text: updatedText };\n    }\n\n    if (sendMessage) {\n      const sendMessagePromise = sendMessage(updatedMessage);\n      logChatPromiseExecution(sendMessagePromise, 'send message');\n      setGiphyState(false);\n    }\n  };\n\n  return (\n    <GiphyContext.Provider value={giphyStateObj}>\n      <div style={{ display: 'flex', width: '100%' }}>\n        <Window>\n          <TeamChannelHeader {...{ setIsEditing, setPinsOpen }} />\n          <MessageList\n            disableQuotedMessages\n            pinPermissions={pinnedPermissions}\n          />\n          <MessageInput\n            overrideSubmitHandler={overrideSubmitHandler}\n          />\n        </Window>\n        <Thread\n          additionalMessageInputProps={{ Input: ThreadMessageInput }}\n        />\n        {pinsOpen && <PinnedMessageList setPinsOpen={setPinsOpen} />}\n      </div>\n    </GiphyContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport './ChannelEmptyState.css';\n\nimport { HashIcon } from '../../assets';\n\nexport const ChannelEmptyState = () => {\n  const { channel, client } = useChatContext();\n  const members = Object.values(channel?.state?.members).filter(\n    ({ user }) => user.id !== client.userID,\n  );\n\n  const getAvatarGroup = () => {\n    if (!members.length) return <Avatar size={72} />;\n\n    return (\n      <div className='channel-empty__avatars'>\n        {members.map((member, i) => {\n          if (i > 2) return null;\n          return <Avatar key={i} image={member.user.image} size={72} />;\n        })}\n      </div>\n    );\n  };\n\n  const getUserText = () => {\n    if (members.length === 1) {\n      return (\n        <span className='channel-empty__user-name'>{`@${\n          members[0].user.name || members[0].user.id\n        }`}</span>\n      );\n    }\n\n    if (members.length === 2) {\n      return (\n        <span className='channel-empty__user-name'>{`@${\n          members[0].user.name || members[0].user.id\n        } and @${members[1].user.name || members[1].user.id}`}</span>\n      );\n    }\n\n    let memberString = '';\n\n    members.forEach((member, i) => {\n      if (i !== members.length - 1) {\n        memberString = `${memberString}@${member.user.name || member.user.id}, `;\n      } else {\n        memberString = `${memberString} and @${member.user.name || member.user.id}`;\n      }\n    });\n\n    return <span className='channel-empty__user-name'>{memberString || 'the Universe'}</span>;\n  };\n\n  return (\n    <div className='channel-empty__container'>\n      {channel.type === 'team' ? <HashIcon /> : getAvatarGroup()}\n      <p className='channel-empty__first'>\n        This is the beginning of your chat history\n        {channel.type === 'team' ? ' in ' : ' with '}\n        {channel.type === 'team' ? `#${channel.data.name || channel.data.id}` : getUserText()}.\n      </p>\n      <p className='channel-empty__second'>Send messages, attachments, links, emojis, and more.</p>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport './UserList.css';\n\nimport { InviteIcon } from '../../assets';\n\nconst ListContainer = (props) => {\n  const { children } = props;\n\n  return (\n    <div className='user-list__container'>\n      <div className='user-list__header'>\n        <p>User</p>\n        <p>Last Active</p>\n        <p>Invite</p>\n      </div>\n      {children}\n    </div>\n  )\n};\n\nconst UserItem = (props) => {\n  const { index, setSelectedUsers, user } = props;\n\n  const [selected, setSelected] = useState(false);\n\n  const getLastActive = (i) => {\n    switch (i) {\n      case 0:\n        return '12 min ago';\n      case 1:\n        return '27 min ago';\n      case 2:\n        return '6 hours ago';\n      case 3:\n        return '14 hours ago';\n      case 4:\n        return 'Yesterday';\n      default:\n        return 'Yesterday';\n    }\n  };\n\n  const handleClick = () => {\n    if (selected) {\n      setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id));\n    } else {\n      setSelectedUsers((prevUsers) => [...prevUsers, user.id]);\n    }\n    setSelected(!selected);\n  };\n\n  return (\n    <div className='user-item__wrapper' onClick={handleClick}>\n      <div className='user-item__name-wrapper'>\n        <Avatar image={user.image} size={32} />\n        <p className='user-item__name'>{user.name || user.id}</p>\n      </div>\n      <p className='user-item__last-active'>{getLastActive(index)}</p>\n      {selected ? <InviteIcon /> : <div className='user-item__invite-empty' />}\n    </div>\n  );\n};\n\nexport const UserList = (props) => {\n  const { filters, setSelectedUsers } = props;\n\n  const { client } = useChatContext();\n\n  const [error, setError] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers(\n          { id: { $ne: client.userID }, ...filters },\n          { id: 1 },\n          { limit: 6 },\n        );\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (e) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, [filters]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (error) {\n    return (\n      <ListContainer>\n        <div className='user-list__message'>Error loading, please refresh and try again.</div>\n      </ListContainer>\n    );\n  }\n\n  if (listEmpty) {\n    return (\n      <ListContainer>\n        <div className='user-list__message'>No users found.</div>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {loading ? (\n        <div className='user-list__message'>Loading users...</div>\n      ) : (\n        users?.length &&\n        users.map((user, i) => (\n          <UserItem index={i} key={user.id} setSelectedUsers={setSelectedUsers} user={user} />\n        ))\n      )}\n    </ListContainer>\n  );\n};\n","import React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport './CreateChannel.css';\n\nimport { UserList } from './UserList';\n\nimport { CloseCreateChannel } from '../../assets';\n\nconst ChannelNameInput = (props) => {\n  const { channelName = '', setChannelName } = props;\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return (\n    <div className='channel-name-input__wrapper'>\n      <p>Name</p>\n      <input\n        onChange={handleChange}\n        placeholder='channel-name (no spaces)'\n        type='text'\n        value={channelName}\n      />\n      <p>Add Members</p>\n    </div>\n  );\n};\n\nexport const CreateChannel = (props) => {\n  const { createType, filters, setIsCreating } = props;\n\n  const { client, setActiveChannel } = useChatContext();\n\n  const [channelName, setChannelName] = useState('');\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n\n  const createChannel = async (event) => {\n    event.preventDefault();\n\n    try {\n      const newChannel = await client.channel(createType, channelName, {\n        name: channelName,\n        members: selectedUsers,\n      });\n\n      await newChannel.watch();\n\n      setChannelName('');\n      setIsCreating(false);\n      setSelectedUsers([client.userID]);\n      setActiveChannel(newChannel);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className='create-channel__container'>\n      <div className='create-channel__header'>\n        <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n        <CloseCreateChannel {...{ setIsCreating }} />\n      </div>\n      {createType === 'team' && <ChannelNameInput {...{ channelName, setChannelName }} />}\n      <UserList {...{ filters, setSelectedUsers }} />\n      <div className='create-channel__button-wrapper' onClick={createChannel}>\n        <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport './EditChannel.css';\n\nimport { UserList } from '../CreateChannel/UserList';\n\nimport { CloseCreateChannel } from '../../assets';\n\nconst ChannelNameInput = (props) => {\n  const { channelName = '', setChannelName } = props;\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return (\n    <div className='channel-name-input__wrapper'>\n      <p>Name</p>\n      <input onChange={handleChange} placeholder='channel-name' type='text' value={channelName} />\n      <p>Add Members</p>\n    </div>\n  );\n};\n\nexport const EditChannel = (props) => {\n  const { filters, setIsEditing } = props;\n  const { channel } = useChatContext();\n\n  const [channelName, setChannelName] = useState(channel?.data.name || channel?.data.id);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const updateChannel = async (event) => {\n    event.preventDefault();\n\n    const nameChanged = channelName !== (channel.data.name || channel.data.id);\n\n    if (nameChanged) {\n      await channel.update(\n        { name: channelName },\n        { text: `Channel name changed to ${channelName}` },\n      );\n    }\n\n    if (selectedUsers.length) {\n      await channel.addMembers(selectedUsers);\n    }\n\n    setChannelName(null);\n    setIsEditing(false);\n    setSelectedUsers([]);\n  };\n\n  return (\n    <div className='edit-channel__container'>\n      <div className='edit-channel__header'>\n        <p>Edit Channel</p>\n        <CloseCreateChannel {...{ setIsEditing }} />\n      </div>\n      <ChannelNameInput {...{ channelName, setChannelName }} />\n      <UserList {...{ filters, setSelectedUsers }} />\n      <div className='edit-channel__button-wrapper' onClick={updateChannel}>\n        <p>Save Changes</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { MessageTeam, useMessageContext } from 'stream-chat-react';\n\nimport './TeamMessage.css';\n\nexport const TeamMessage = (props) => {\n  const { setPinsOpen } = props;\n\n  const {\n    handleOpenThread,\n    message,\n  } = useMessageContext();\n\n  const handleOpenThreadOverride = (event) => {\n    if (setPinsOpen) setPinsOpen(false);\n    handleOpenThread(event);\n  };\n\n  return (\n    <div className={message.isPinned ? 'pinned-message' : 'unpinned-message'}>\n      <MessageTeam {...props} message={message} handleOpenThread={handleOpenThreadOverride} />\n      {/** potentially add replies component here */}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useChatContext, useTypingContext } from 'stream-chat-react';\n\nimport './TeamTypingIndicator.css';\n\nexport const TeamTypingIndicator = (props) => {\n  const { type } = props;\n\n  const { client } = useChatContext();\n  const { typing } = useTypingContext();\n\n  if (!client || !typing) return null;\n\n  if (type === 'list') {\n    return (\n      <div className='typing-indicator__list'>\n        <div className='dots'>\n          <div className='dot' />\n          <div className='dot' />\n          <div className='dot' />\n        </div>\n      </div>\n    );\n  }\n\n  const users = Object.values(typing)\n    .filter(({ user }) => user?.id !== client.user?.id)\n    .map(({ user }) => user.name || user.id);\n\n  if (!users.length) return null;\n\n  let text = 'Someone is typing';\n\n  if (users.length === 1) {\n    text = `${users[0]} is typing`;\n  } else if (users.length === 2) {\n    text = `${users[0]} and ${users[1]} are typing`;\n  } else if (users.length > 2) {\n    text = `${users[0]} and ${users.length - 1} more are typing`;\n  }\n\n  return (\n    <div className='typing-indicator__input'>\n      <div className='dots'>\n        <div className='dot' />\n        <div className='dot' />\n        <div className='dot' />\n      </div>\n      <div className='typing-indicator__input__text'>{text}</div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport { ImageDropzone } from 'react-file-utils';\nimport {\n  ChatAutoComplete,\n  EmojiPicker,\n  UploadsPreview,\n  useChannelStateContext,\n  useChatContext,\n  useMessageInputContext,\n} from 'stream-chat-react';\n\nimport './TeamMessageInput.css';\n\nimport { TeamTypingIndicator } from '../TeamTypingIndicator/TeamTypingIndicator';\n\nimport { GiphyContext } from '../ChannelContainer/ChannelInner';\n\nimport {\n  BoldIcon,\n  CodeSnippet,\n  ItalicsIcon,\n  LightningBoltSmall,\n  SendButton,\n  SmileyFace,\n  StrikeThroughIcon,\n} from '../../assets';\n\nexport const TeamMessageInput = (props) => {\n  const { pinsOpen } = props;\n\n  const { giphyState, setGiphyState } = useContext(GiphyContext);\n\n  const {\n    channel,\n    thread,\n  } = useChannelStateContext();\n  const { client } = useChatContext();\n\n  const [boldState, setBoldState] = useState(false);\n  const [codeState, setCodeState] = useState(false);\n  const [italicState, setItalicState] = useState(false);\n  const [strikeThroughState, setStrikeThroughState] = useState(false);\n\n  const resetIconState = () => {\n    setBoldState(false);\n    setCodeState(false);\n    setItalicState(false);\n    setStrikeThroughState(false);\n  };\n\n  const getPlaceholder = () => {\n    if (channel.type === 'team') {\n      return `#${channel.data.name || channel.data.id || 'random'}`;\n    }\n\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID,\n    );\n\n    if (!members.length || members.length === 1) {\n      return members[0]?.user.name || members[0]?.user.id || 'Johnny Blaze';\n    }\n\n    return 'the group';\n  };\n\n  const messageInput = useMessageInputContext();\n\n  const onChange = useCallback(\n    (e) => {\n      const { value } = e.target;\n      const deletePressed = e.nativeEvent?.inputType === 'deleteContentBackward';\n\n      if (messageInput.text.length === 1 && deletePressed) {\n        setGiphyState(false);\n      }\n\n      if (!giphyState && messageInput.text.startsWith('/giphy') && !messageInput.numberOfUploads) {\n        e.target.value = value.replace('/giphy', '');\n        setGiphyState(true);\n      }\n\n      if (boldState) {\n        if (deletePressed) {\n          e.target.value = `${value.slice(0, value.length - 2)}**`;\n        } else {\n          e.target.value = `**${value.replace(/\\**/g, '')}**`;\n        }\n      } else if (codeState) {\n        if (deletePressed) {\n          e.target.value = `${value.slice(0, value.length - 1)}\\``;\n        } else {\n          e.target.value = `\\`${value.replace(/`/g, '')}\\``;\n        }\n      } else if (italicState) {\n        if (deletePressed) {\n          e.target.value = `${value.slice(0, value.length - 1)}*`;\n        } else {\n          e.target.value = `*${value.replace(/\\*/g, '')}*`;\n        }\n      } else if (strikeThroughState) {\n        if (deletePressed) {\n          e.target.value = `${value.slice(0, value.length - 2)}~~`;\n        } else {\n          e.target.value = `~~${value.replace(/~~/g, '')}~~`;\n        }\n      }\n\n      messageInput.handleChange(e);\n    },\n    [boldState, codeState, giphyState, italicState, messageInput, setGiphyState, strikeThroughState],\n  );\n\n  const GiphyIcon = () => (\n    <div className='giphy-icon__wrapper'>\n      <LightningBoltSmall />\n      <p className='giphy-icon__text'>GIPHY</p>\n    </div>\n  );\n\n  return (\n    <div className={`team-message-input__wrapper ${(!!thread || pinsOpen) && 'thread-open'}`}>\n      <ImageDropzone>\n        <div className='team-message-input__input'>\n          <div className='team-message-input__top'>\n            {giphyState && !messageInput.numberOfUploads && <GiphyIcon />}\n            <UploadsPreview />\n            <ChatAutoComplete\n              onChange={onChange}\n              placeholder={`Message ${getPlaceholder()}`}\n            />\n            <div\n              className='team-message-input__button'\n              role='button'\n              aria-roledescription='button'\n              onClick={messageInput.handleSubmit}\n            >\n              <SendButton />\n            </div>\n          </div>\n          <div className='team-message-input__bottom'>\n            <div className='team-message-input__icons'>\n              <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\n              {/* <LightningBolt {...{ giphyState, onCommandClick }} /> */}\n              <div className='icon-divider'></div>\n              <BoldIcon {...{ boldState, resetIconState, setBoldState }} />\n              <ItalicsIcon {...{ italicState, resetIconState, setItalicState }} />\n              <StrikeThroughIcon\n                {...{\n                  resetIconState,\n                  strikeThroughState,\n                  setStrikeThroughState,\n                }}\n              />\n              <CodeSnippet {...{ codeState, resetIconState, setCodeState }} />\n            </div>\n          </div>\n        </div>\n      </ImageDropzone>\n      <TeamTypingIndicator type='input' />\n      <EmojiPicker />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Channel, useChatContext } from 'stream-chat-react';\n\nimport './ChannelContainer.css';\n\nimport { ChannelInner } from './ChannelInner';\n\nimport { ChannelEmptyState } from '../ChannelEmptyState/ChannelEmptyState';\nimport { CreateChannel } from '../CreateChannel/CreateChannel';\nimport { EditChannel } from '../EditChannel/EditChannel';\nimport { TeamMessage } from '../TeamMessage/TeamMessage';\nimport { TeamMessageInput } from '../TeamMessageInput/TeamMessageInput';\n\nimport { CloseThreadIcon } from '../../assets';\n\nconst ThreadHeader = (props) => {\n  const { closeThread, setPinsOpen, thread } = props;\n\n  const getReplyCount = () => {\n    if (!thread?.reply_count) return '';\n    if (thread.reply_count === 1) return '1 reply';\n    return `${thread.reply_count} Replies`;\n  };\n\n  return (\n    <div className='custom-thread-header'>\n      <div className='custom-thread-header__left'>\n        <p className='custom-thread-header__left-title'>Thread</p>\n        <p className='custom-thread-header__left-count'>{getReplyCount()}</p>\n      </div>\n      <CloseThreadIcon {...{ closeThread, setPinsOpen }} />\n    </div>\n  );\n};\n\nexport const ChannelContainer = (props) => {\n  const { createType, isCreating, isEditing, setIsCreating, setIsEditing } = props;\n\n  const { channel } = useChatContext();\n\n  const [pinsOpen, setPinsOpen] = useState(false);\n\n  if (isCreating) {\n    const filters = {};\n\n    return (\n      <div className='channel__container'>\n        <CreateChannel {...{ createType, filters, setIsCreating }} />\n      </div>\n    );\n  }\n\n  if (isEditing) {\n    const filters = {};\n\n    if (channel?.state?.members) {\n      const channelMembers = Object.keys(channel.state.members);\n      if (channelMembers.length) {\n        filters.id = { $nin: channelMembers };\n      }\n    }\n\n    return (\n      <div className='channel__container'>\n        <EditChannel {...{ filters, setIsEditing }} />\n      </div>\n    );\n  }\n\n  return (\n    <div className='channel__container'>\n      <Channel\n        EmptyStateIndicator={ChannelEmptyState}\n        Input={TeamMessageInput}\n        Message={(messageProps, i) => (\n          <TeamMessage\n            key={i}\n            {...messageProps}\n            {...{ setPinsOpen }}\n          />\n        )}\n        ThreadHeader={(threadProps) => <ThreadHeader {...threadProps} {...{ setPinsOpen }} />}\n        TypingIndicator={() => null}\n      >\n        <ChannelInner\n          {...{\n            pinsOpen,\n            setIsEditing,\n            setPinsOpen,\n          }}\n        />\n      </Channel>\n    </div>\n  );\n};\n","export const channelByUser = async (props) => {\n  const { client, setActiveChannel, channel } = props;\n\n  const filters = {\n    type: 'messaging',\n    member_count: 2,\n    members: { $eq: [client.user.id, client.userID || ''] },\n  };\n\n  const [existingChannel] = await client.queryChannels(filters);\n\n  if (existingChannel) {\n    return setActiveChannel(existingChannel);\n  }\n\n  const newChannel = client.channel('messaging', {\n    members: [channel.id, client.userID || ''],\n  });\n  return setActiveChannel(newChannel);\n};","import React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport { channelByUser } from './utils';\n\nconst SearchResult = (props) => {\n  const { channel, focusedId, type, setChannel } = props;\n\n  const { client, setActiveChannel } = useChatContext();\n\n  if (type === 'channel') {\n    return (\n      <div\n        onClick={() => setChannel(channel)}\n        className={\n          focusedId === channel.id\n            ? 'channel-search__result-container__focused'\n            : 'channel-search__result-container'\n        }\n      >\n        <div className='result-hashtag'>#</div>\n        <p className='channel-search__result-text'>{channel.data.name}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={async () => {\n        channelByUser({ client, setActiveChannel, channel });\n      }}\n      className={\n        focusedId === channel.id\n          ? 'channel-search__result-container__focused'\n          : 'channel-search__result-container'\n      }\n    >\n      <div className='channel-search__result-user'>\n        <Avatar image={channel.image || undefined} size={24} />\n        <p className='channel-search__result-text'>\n          {channel.name || channel.id || 'Johnny Blaze'}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport const ResultsDropdown = ({\n  teamChannels,\n  directChannels,\n  focusedId,\n  loading,\n  setChannel,\n  setQuery,\n}) => {\n  document.addEventListener('click', () => setQuery(''));\n\n  return (\n    <div className='channel-search__results'>\n      <p className='channel-search__results-header'>Channels</p>\n      {loading && !teamChannels.length && (\n        <p className='channel-search__results-header'>\n          <i>Loading...</i>\n        </p>\n      )}\n      {!loading && !teamChannels.length ? (\n        <p className='channel-search__results-header'>\n          <i>No channels found</i>\n        </p>\n      ) : (\n        teamChannels?.map((channel, i) => (\n          <SearchResult\n            channel={channel}\n            focusedId={focusedId}\n            key={i}\n            setChannel={setChannel}\n            type='channel'\n          />\n        ))\n      )}\n      <p className='channel-search__results-header'>Users</p>\n      {loading && !directChannels.length && (\n        <p className='channel-search__results-header'>\n          <i>Loading...</i>\n        </p>\n      )}\n      {!loading && !directChannels.length ? (\n        <p className='channel-search__results-header'>\n          <i>No direct messages found</i>\n        </p>\n      ) : (\n        directChannels?.map((channel, i) => (\n          <SearchResult\n            channel={channel}\n            focusedId={focusedId}\n            key={i}\n            setChannel={setChannel}\n            type='user'\n          />\n        ))\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport _debounce from 'lodash.debounce';\n\nimport './ChannelSearch.css';\n\nimport { ResultsDropdown } from './ResultsDropdown';\n\nimport { SearchIcon } from '../../assets';\n\nexport const ChannelSearch = () => {\n  const { client, setActiveChannel } = useChatContext();\n\n  const [allChannels, setAllChannels] = useState([]);\n  const [teamChannels, setTeamChannels] = useState([]);\n  const [directChannels, setDirectChannels] = useState([]);\n\n  const [focused, setFocused] = useState(undefined);\n  const [focusedId, setFocusedId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      if (event.key === 'ArrowDown') {\n        setFocused((prevFocused) => {\n          if (prevFocused === undefined) return 0;\n          return prevFocused === allChannels.length - 1 ? 0 : prevFocused + 1;\n        });\n      } else if (event.key === 'ArrowUp') {\n        setFocused((prevFocused) => {\n          if (prevFocused === undefined) return 0;\n          return prevFocused === 0 ? allChannels.length - 1 : prevFocused - 1;\n        });\n      } else if (event.keyCode === 13) {\n        event.preventDefault();\n        setActiveChannel(allChannels[focused]);\n        setFocused(undefined);\n        setFocusedId('');\n        setQuery('');\n      }\n    },\n    [allChannels, focused, setActiveChannel],\n  );\n\n  useEffect(() => {\n    if (query) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown, query]);\n\n  useEffect(() => {\n    if (!query) {\n      setTeamChannels([]);\n      setDirectChannels([]);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (focused >= 0) {\n      setFocusedId(allChannels[focused]?.id);\n    }\n  }, [allChannels, focused]);\n\n  const setChannel = (channel) => {\n    setQuery('');\n    setActiveChannel(channel);\n  };\n\n  const getChannels = async (text) => {\n    try {\n      const channelResponse = client.queryChannels(\n        {\n          type: 'team',\n          name: { $autocomplete: text },\n        },\n        {},\n        { limit: 5 },\n      );\n\n      const userResponse = client.queryUsers(\n        {\n          id: { $ne: client.userID },\n          $and: [\n            { name: { $autocomplete: text } },\n            { name: { $nin: ['Daniel Smith', 'Kevin Rosen', 'Jen Alexander'] } },\n          ],\n        },\n        { id: 1 },\n        { limit: 5 },\n      );\n\n      const [channels, { users }] = await Promise.all([channelResponse, userResponse]);\n\n      if (channels.length) setTeamChannels(channels);\n      if (users.length) setDirectChannels(users);\n      setAllChannels(channels.concat(users));\n    } catch (e) {\n      setQuery('');\n      console.log(e);\n    }\n\n    setLoading(false);\n  };\n\n  const getChannelsDebounce = _debounce(getChannels, 100, {\n    trailing: true,\n  });\n\n  const onSearch = (event) => {\n    event.preventDefault();\n\n    setLoading(true);\n    setFocused(undefined);\n    setQuery(event.target.value);\n    if (!event.target.value) return;\n\n    getChannelsDebounce(event.target.value);\n  };\n\n  return (\n    <div className='channel-search__container'>\n      <div className='channel-search__input__wrapper'>\n        <div className='channel-search__input__icon'>\n          <SearchIcon />\n        </div>\n        <input\n          className='channel-search__input__text'\n          onChange={onSearch}\n          placeholder='Search'\n          type='text'\n          value={query}\n        />\n      </div>\n      {query && (\n        <ResultsDropdown\n          teamChannels={teamChannels}\n          directChannels={directChannels}\n          focusedId={focusedId}\n          loading={loading}\n          setChannel={setChannel}\n          setQuery={setQuery}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './TeamChannelList.css';\n\nimport { AddChannel } from '../../assets';\n\nconst ChannelList = (props) => {\n  const {\n    children,\n    error = false,\n    loading,\n    setCreateType,\n    setIsCreating,\n    setIsEditing,\n    type,\n  } = props;\n\n  /**\n   * This work around removes children of the other channel type since we have\n   * two ChannelList components and each receives the `message.new` event,\n   * which by default adds the channel in question to children on each list.\n   */\n  let newChildren = children;\n  let childArray;\n\n  if (type === 'team') {\n    childArray = newChildren?.props?.children?.filter(\n      (child) => child.props.channel.type === 'team',\n    );\n  }\n\n  if (type === 'messaging') {\n    childArray = newChildren?.props?.children?.filter(\n      (child) => child.props.channel.type === 'messaging',\n    );\n  }\n\n  newChildren = {\n    ...newChildren,\n    props: {\n      children: childArray,\n    },\n  };\n\n  if (error) {\n    return type === 'team' ? (\n      <div className='team-channel-list'>\n        <p className='team-channel-list__message'>\n          Connection error, please wait a moment and try again.\n        </p>\n      </div>\n    ) : null;\n  }\n\n  if (loading) {\n    return (\n      <div className='team-channel-list'>\n        <p className='team-channel-list__message loading'>\n          {type === 'team' ? 'Channels' : 'Messages'} loading....\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className='team-channel-list'>\n      <div className='team-channel-list__header'>\n        <p className='team-channel-list__header__title'>\n          {type === 'team' ? 'Channels' : 'Direct Messages'}\n        </p>\n        <AddChannel\n          {...{ setCreateType, setIsCreating, setIsEditing }}\n          type={type === 'team' ? 'team' : 'messaging'}\n        />\n      </div>\n      {newChildren}\n    </div>\n  );\n};\n\nexport const TeamChannelList = React.memo(ChannelList);\n","import React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nimport './TeamChannelPreview.css';\n\nimport { TeamTypingIndicator } from '../TeamTypingIndicator/TeamTypingIndicator';\n\nexport const TeamChannelPreview = (props) => {\n  const { channel, setActiveChannel, setIsCreating, setIsEditing, type } = props;\n\n  const { channel: activeChannel, client } = useChatContext();\n\n  const ChannelPreview = () => (\n    <p className='channel-preview__item'># {channel?.data?.name || channel?.data?.id || 'random'}</p>\n  );\n\n  const DirectPreview = () => {\n    const members = Object.values(channel.state.members).filter(\n      ({ user }) => user.id !== client.userID,\n    );\n    const defaultName = 'Johnny Blaze';\n\n    if (!members.length || members.length === 1) {\n      return (\n        <div className='channel-preview__item single'>\n          <Avatar image={members[0]?.user.image || undefined} size={24} />\n          <p>{members[0]?.user.name || members[0]?.user.id || defaultName}</p>\n          <TeamTypingIndicator type='list' />\n        </div>\n      );\n    }\n\n    return (\n      <div className='channel-preview__item multi'>\n        <span>\n          <Avatar image={members[0]?.user.image || undefined} size={18} />\n        </span>\n        <Avatar image={members[1]?.user.image || undefined} size={18} />\n        <p>\n          {members[0]?.user.name || members[0]?.user.id || defaultName},{' '}\n          {members[1]?.user.name || members[1]?.user.id || defaultName}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className={\n        channel?.id === activeChannel?.id\n          ? 'channel-preview__wrapper__selected'\n          : 'channel-preview__wrapper'\n      }\n      onClick={() => {\n        setIsCreating(false);\n        setIsEditing(false);\n        setActiveChannel(channel);\n      }}\n    >\n      {type === 'team' ? <ChannelPreview /> : <DirectPreview />}\n    </div>\n  );\n};\n","import React from 'react';\nimport { ChannelList } from 'stream-chat-react';\n\nimport './ChannelListContainer.css';\n\nimport { ChannelSearch } from '../ChannelSearch/ChannelSearch';\nimport { TeamChannelList } from '../TeamChannelList/TeamChannelList';\nimport { TeamChannelPreview } from '../TeamChannelPreview/TeamChannelPreview';\n\nimport { SideBarFlag, SideBarLogo } from '../../assets';\n\nconst SideBar = () => (\n  <div className='channel-list__sidebar'>\n    <div className='channel-list__sidebar__icon1'>\n      <div className='icon1__inner'>\n        <SideBarLogo />\n      </div>\n    </div>\n    <div className='channel-list__sidebar__icon2'>\n      <div className='icon2__inner'>\n        <SideBarFlag />\n      </div>\n    </div>\n  </div>\n);\n\nconst CompanyHeader = () => (\n  <div className='channel-list__header'>\n    <p className='channel-list__header__text'>Worksly</p>\n  </div>\n);\n\nexport const ChannelListContainer = (props) => {\n  const { filters, options, setCreateType, setIsCreating, setIsEditing, sort } = props;\n\n  return (\n    <div className='channel-list__container'>\n      <SideBar />\n      <div className='channel-list__list__wrapper'>\n        <CompanyHeader />\n        <ChannelSearch />\n        <ChannelList\n          filters={filters[0]}\n          options={options}\n          sort={sort}\n          List={(listProps) => (\n            <TeamChannelList\n              {...listProps}\n              {...{ setCreateType, setIsCreating, setIsEditing }}\n              type='team'\n            />\n          )}\n          Preview={(previewProps) => (\n            <TeamChannelPreview\n              {...previewProps}\n              {...{ setIsCreating, setIsEditing }}\n              type='team'\n            />\n          )}\n        />\n        <ChannelList\n          filters={filters[1]}\n          options={options}\n          sort={sort}\n          List={(listProps) => (\n            <TeamChannelList\n              {...listProps}\n              {...{ setCreateType, setIsCreating, setIsEditing }}\n              type='messaging'\n            />\n          )}\n          Preview={(previewProps) => (\n            <TeamChannelPreview\n              {...previewProps}\n              {...{ setIsCreating, setIsEditing }}\n              type='messaging'\n            />\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat, enTranslations, Streami18n } from 'stream-chat-react';\n\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\n\nimport { getRandomImage } from './assets';\nimport { useChecklist } from './ChecklistTasks';\nimport { ChannelContainer } from './components/ChannelContainer/ChannelContainer';\nimport { ChannelListContainer } from './components/ChannelListContainer/ChannelListContainer';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst apiKey = urlParams.get('apikey') || process.env.REACT_APP_STREAM_KEY;\nconst user = urlParams.get('user') || process.env.REACT_APP_USER_ID;\nconst theme = urlParams.get('theme') || 'light';\nconst userToken = urlParams.get('user_token') || process.env.REACT_APP_USER_TOKEN;\nconst targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\n\nconst i18nInstance = new Streami18n({\n  language: 'en',\n  translationsForLanguage: {\n    ...enTranslations,\n  },\n});\n\nconst filters = [{ type: 'team' }, { type: 'messaging' }];\nconst options = { state: true, watch: true, presence: true, limit: 3 };\nconst sort = { last_message_at: -1, updated_at: -1 };\n\nconst client = StreamChat.getInstance(apiKey);\nclient.connectUser({ id: user, name: user, image: getRandomImage() }, userToken);\n\nconst App = () => {\n  const [createType, setCreateType] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useChecklist(client, targetOrigin);\n\n  useEffect(() => {\n    const handleColorChange = (color) => {\n      const root = document.documentElement;\n      if (color.length && color.length === 7) {\n        root.style.setProperty('--primary-color', `${color}E6`);\n        root.style.setProperty('--primary-color-alpha', `${color}1A`);\n      }\n    };\n\n    window.addEventListener('message', (event) => handleColorChange(event.data));\n    return () => window.removeEventListener('message', (event) => handleColorChange(event.data));\n  }, []);\n\n  return (\n    <>\n      <div className='app__wrapper'>\n        <Chat {...{ client, i18nInstance }} theme={`team ${theme}`}>\n          <ChannelListContainer\n            {...{\n              isCreating,\n              filters,\n              options,\n              setCreateType,\n              setIsCreating,\n              setIsEditing,\n              sort,\n            }}\n          />\n          <ChannelContainer\n            {...{\n              createType,\n              isCreating,\n              isEditing,\n              setIsCreating,\n              setIsEditing,\n            }}\n          />\n        </Chat>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
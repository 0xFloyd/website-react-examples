[{"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/index.js":"1","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/reportWebVitals.js":"2","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/App.jsx":"3","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/chat.jsx":"4","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/header.jsx":"5","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/video.jsx":"6","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/footer.jsx":"7"},{"size":509,"mtime":1607537175691,"results":"8","hashOfConfig":"9"},{"size":364,"mtime":1607535819339,"results":"10","hashOfConfig":"9"},{"size":1293,"mtime":1607640596123,"results":"11","hashOfConfig":"9"},{"size":7793,"mtime":1607640553088,"results":"12","hashOfConfig":"9"},{"size":1854,"mtime":1607639895311,"results":"13","hashOfConfig":"9"},{"size":367,"mtime":1607644100200,"results":"14","hashOfConfig":"9"},{"size":2569,"mtime":1607640557373,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"gyp9ls",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/index.js",[],["32","33"],"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/reportWebVitals.js",[],"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/App.jsx",[],"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/chat.jsx",["34"],"import React, { useState } from 'react';\nimport '../styles/chat.scss'\nimport { Chat, Channel, Thread, Window } from 'stream-chat-react';\nimport { MessageList, MessageInput } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\n\nimport { ReactComponent as StreamerSVG } from '../assets/icons/streamer.svg';\nimport { ReactComponent as ModeratorSVG } from '../assets/icons/moderator.svg';\nimport { ReactComponent as VIPSVG } from '../assets/icons/VIP.svg';\nimport { ReactComponent as UserSVG } from '../assets/icons/user.svg';\nimport { ReactComponent as StarSVG } from '../assets/icons/star.svg';\nimport { ReactComponent as SendSVG } from '../assets/icons/send.svg';\n\nimport 'stream-chat-react/dist/css/index.css';\n\nconst chatClient = new StreamChat('gx5a64bj4ptz');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoicmVzdGxlc3MtY2hlcnJ5LTUifQ.E6gVPqi-lhm-sUkpSyqf0VVtK1M6BsF3s8IAp2diS-g';\nconst userID = 'restless-cherry-5'\n\n\nchatClient.setUser(\n  {\n    id: userID,\n    name: 'Restless cherry',\n    image: 'https://getstream.io/random_png/?id=restless-cherry-5&name=Restless+cherry'\n  },\n  userToken,\n);\n\nconst channel = chatClient.channel('messaging', 'godevs', {\n  // add as many custom fields as you'd like\n  image: 'https://cdn.chrisshort.net/testing-certificate-chains-in-go/GOPHER_MIC_DROP.png',\n  name: 'Talk about Go',\n});\n\nconst colors = ['#5096ff', '#e60053', '#00ddb5', '#dde100', '#8458ff', '#ffa800'];\n\nconst getColor = () => {\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nconst getIcon = (type) => {\n  switch (type) {\n    case 'streamer':\n      return <StreamerSVG />\n    case 'moderator':\n      return <ModeratorSVG />\n    case 'VIP':\n      return <VIPSVG />\n    case 'user':\n      return <UserSVG />\n    default:\n      break;\n  }\n}\n\nconst ChatBox = props => {\n  channel.watch();\n\n  const [participants, setParticipants] = useState({\n    Streamers: [{ name: 'PolarBear', color: '#5096ff', type: 'streamer' }],\n    Moderators: [{ name: 'Nava99', color: '#e60053', type: 'moderator' }, { name: 'rawr2994', color: '#00ddb5', type: 'moderator' }, { name: 'FrogPlanetB', color: '#dde100', type: 'moderator' }, { name: 'Space_Cadet82', color: '#8458ff', type: 'moderator' }],\n    VIPs: [{ name: 'craw85', color: '#5096ff', type: 'VIP' }, { name: 'kiddwim', color: '#ffa800', type: 'VIP' }, { name: 'idoltoren', color: '#8458ff', type: 'VIP' }, { name: 'LLookket1', color: '#e60053', type: 'VIP' }],\n    Users: [{ name: 'funkytallguy', color: '#e60053', type: 'user' }, { name: 'HalfEntity', color: '#8458ff', type: 'user' }, { name: 'homelessmango33', color: '#00ddb5', type: 'user' }, { name: 'JijE34', color: '#ffa800', type: 'user' }, { name: 'KingAhhRock', color: '#00ddb5', type: 'user' }, { name: 'KSK999', color: '#dde100', type: 'user' }, { name: 'Ladyprime91', color: '#ffa800', type: 'user' }, { name: 'longshot123', color: '#8458ff', type: 'user' }, { name: 'softpastel', color: '#00ddb5', type: 'user' }, { name: 'NevRock', color: '#e60053', type: 'user' }, { name: 'Sol_Invictus', color: '#5096ff', type: 'user' }, { name: 'xzzeus', color: '#dde100', type: 'user' }, { name: 'gotchasuckas', color: '#5096ff', type: 'user' }, { name: 'FunRyder', color: '#00ddb5', type: 'user' }]\n  })\n\n  const [searchInput, setSearchInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n\n  channel.on('typing.start', event => {\n    let isUser = event.user.id === userID;\n    return !isUser ? setIsTyping(true) : null;\n  });\n\n  channel.on('typing.stop', event => {\n    setTimeout(() => {\n      setIsTyping(false);\n    }, 1000);\n  });\n\n  const onChangeHandler = e => {\n    setSearchInput(e.target.value);\n  }\n\n  const participantFilter = { ...participants };\n\n  Object.keys(participants).forEach((category) => {\n    participantFilter[category] = participantFilter[category].filter((part) => {\n      let lowerCaseName = part.name.toLowerCase();\n      if (lowerCaseName.includes(searchInput.toLowerCase())) {\n        return part;\n      } else {\n        return null;\n      }\n    })\n  })\n\n  return (\n    <section className={`chat-members-container ${props.showMembers ? 'show-members' : 'hide-members'} ${props.isFullScreen ? 'full-screen' : 'in-screen'}`}>\n      {channel &&\n        <div className='chat-container'>\n          <Chat client={chatClient}>\n            <Channel channel={channel}>\n              <Window>\n                <div className=\"channel-header\">\n                  <button className=\"hide-btn\" onClick={() => {\n                    if (props.showMembers) {\n                      props.setShowMembers(false);\n                      props.setIsFullScreen(true);\n                    } else {\n                      props.setIsFullScreen(true);\n                    }\n                  }}></button>\n                  <p>Live Chat</p>\n                  <button className=\"options-btn\" onClick={() => {\n                    props.setShowMembers(true)\n                  }}></button>\n                </div>\n                <MessageList Message={(props) => {\n                  return (\n                    <div className=\"custom-message\">\n                      <UserSVG />\n                      <p className=\"message-owner\" style={{ color: getColor() }}>{props.message.user.id}</p>\n                      <p className=\"message\">{props.message.text}</p>\n                    </div>\n                  )\n                }} />\n                <div className=\"channel-footer\">\n                  <MessageInput />\n                  <div className=\"channel-footer-separator\">\n                    <div className=\"watcher-count\">\n                      <StarSVG />\n                      <p>68</p>\n                    </div>\n                    {isTyping &&\n                      <div className=\"typing-indicators\">\n                        <div className=\"indicators\">\n                          {\n                            [1, 2, 3].map((item, i) => (\n                              <div className=\"dot\" style={{ animationDelay: (i * .2) + 's' }}></div>\n                            ))\n                          }\n                        </div>\n                        <p>a member is typing</p>\n                      </div>\n                    }\n                    <button>\n                      <SendSVG />\n                    </button>\n                  </div>\n                </div>\n              </Window>\n              <Thread />\n            </Channel>\n          </Chat>\n        </div>\n      }\n      <div className={`members-container ${props.showMembers ? 'show' : 'hide'}`}>\n        <div className=\"members-header\">\n          <button className=\"close-participants-btn\" onClick={() => {\n            props.setShowMembers(false)\n          }}></button>\n          <p>Participants (458K)</p>\n          <div></div>\n        </div>\n        <div className=\"list-container\">\n          <input placeholder=\"Search\" value={searchInput} type=\"text\" onChange={e => onChangeHandler(e)} />\n          {Object.keys(participantFilter).map((category) => {\n            return (\n              <div className=\"list-separator\">\n                <div className=\"list-header\">\n                  <p>{category}</p>\n                </div>\n                <ul>\n                  {\n                    participantFilter[category].map((participant) => {\n                      return (\n                        <li >\n                          {\n                            getIcon(participant.type)\n                          }\n                          <p style={{ color: participant.color }}>{participant.name}</p>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default ChatBox\n","/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/header.jsx",[],"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/video.jsx",[],"/Users/anderslund/development/stream/website-react-examples/gaming-livestream/src/components/footer.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":60,"column":24,"nodeType":"41","messageId":"42","endLine":60,"endColumn":39},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'setParticipants' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]